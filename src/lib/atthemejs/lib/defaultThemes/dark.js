"use strict";
// This file was automatically generated by .attheme default theme
// generator, available at:
//     https://gitlab.com/snejugal/attheme-default-theme-generator
Object.defineProperty(exports, "__esModule", { value: true });
const __1 = require("..");
const color_1 = require("@snejugal/color");
/**
 * Generates the Dark theme.
 */
const dark = (accent) => new __1.default([
    [
        `actionBarActionModeDefault`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -9.0826914460865 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.7738818430734772)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.0756002773891872 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `actionBarActionModeDefaultIcon`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `actionBarActionModeDefaultSelector`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -9.0260914699776 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8080182756110917)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.22580179602308434 + 0)),
        })), { alpha: 122 }),
    ],
    [
        `actionBarActionModeDefaultTop`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -8.8472218078223 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.7621540320193665)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.05363063541445163 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `actionBarBrowser`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -10.3013713358815 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6784376195568965)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.04574921372894043 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `actionBarDefault`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -10.3013713358815 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6784376195568965)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.04574921372894043 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `actionBarDefaultArchived`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -4.1392880460427 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6362509397828044)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.07024255988622757 + 0.0032100801813451044)),
        })), { alpha: 255 }),
    ],
    [
        `actionBarDefaultArchivedIcon`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `actionBarDefaultArchivedSearch`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `actionBarDefaultArchivedSelector`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -10.132376266121 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6565987773180244)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.08911769990909812 + 0.00130631562058563)),
        })), { alpha: 255 }),
    ],
    [
        `actionBarDefaultArchivedTitle`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `actionBarDefaultIcon`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `actionBarDefaultSearch`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `actionBarDefaultSearchArchivedPlaceholder`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 136,
        },
    ],
    [
        `actionBarDefaultSearchPlaceholder`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 136,
        },
    ],
    [
        `actionBarDefaultSelector`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -10.132376266121 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6565987773180244)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.08911769990909812 + 0.00130631562058563)),
        })), { alpha: 255 }),
    ],
    [
        `actionBarDefaultSubmenuBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -10.5448660421266 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6939674783234439)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.06969434704149025 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `actionBarDefaultSubmenuItem`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `actionBarDefaultSubmenuItemIcon`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -16.1355818942838 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.37207641696964455)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.23468193676059623 + 0.1776281018001317)),
        })), { alpha: 255 }),
    ],
    [
        `actionBarDefaultSubtitle`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -16.9356860273822 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.29687522650941733)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.16830442771710852 + 0.2004122316520832)),
        })), { alpha: 255 }),
    ],
    [
        `actionBarDefaultTitle`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `actionBarTabActiveText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -13.5160911310149 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8902238121339014)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.0460542614509813 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `actionBarTabLine`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -7.0682405542296 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.907584524076572)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.0460542614509813 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `actionBarTabSelector`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -16.0592486360103 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.773915752628345)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.1507662011374849 + 0)),
        })), { alpha: 55 }),
    ],
    [
        `actionBarTabUnactiveText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -16.9356860273822 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.29687522650941733)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.16830442771710852 + 0.2004122316520832)),
        })), { alpha: 255 }),
    ],
    [
        `actionBarWhiteSelector`,
        {
            red: 0,
            green: 0,
            blue: 0,
            alpha: 47,
        },
    ],
    [
        `avatar_actionBarIconBlue`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `avatar_actionBarSelectorBlue`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -10.2350758941683 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.7164631487507437)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.15686607717768053 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `avatar_actionBarSelectorCyan`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -10.2350758941683 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.7164631487507437)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.15686607717768053 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `avatar_actionBarSelectorGreen`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -10.2350758941683 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.7164631487507437)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.15686607717768053 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `avatar_actionBarSelectorOrange`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -10.2350758941683 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.7164631487507437)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.15686607717768053 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `avatar_actionBarSelectorPink`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -10.2350758941683 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.7164631487507437)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.15686607717768053 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `avatar_actionBarSelectorRed`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -10.2350758941683 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.7164631487507437)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.15686607717768053 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `avatar_actionBarSelectorViolet`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -10.2350758941683 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.7164631487507437)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.15686607717768053 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `avatar_backgroundActionBarBlue`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -10.3013713358815 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6784376195568965)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.04574921372894043 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `avatar_backgroundActionBarCyan`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -10.3013713358815 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6784376195568965)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.04574921372894043 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `avatar_backgroundActionBarGreen`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -10.3013713358815 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6784376195568965)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.04574921372894043 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `avatar_backgroundActionBarOrange`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -10.3013713358815 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6784376195568965)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.04574921372894043 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `avatar_backgroundActionBarPink`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -10.3013713358815 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6784376195568965)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.04574921372894043 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `avatar_backgroundActionBarRed`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -10.3013713358815 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6784376195568965)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.04574921372894043 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `avatar_backgroundActionBarViolet`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -10.3013713358815 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6784376195568965)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.04574921372894043 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `avatar_backgroundArchived`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -16.5852728123843 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.637820949449397)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.10232280907718906 + 0.004423854180694388)),
        })), { alpha: 255 }),
    ],
    [
        `avatar_backgroundArchivedHidden`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -15.4547379653164 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6385616865137657)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.12501577891313664 + 0.005260064184287855)),
        })), { alpha: 255 }),
    ],
    [
        `avatar_backgroundBlue`,
        {
            red: 84,
            green: 156,
            blue: 221,
            alpha: 255,
        },
    ],
    [
        `avatar_backgroundCyan`,
        {
            red: 95,
            green: 190,
            blue: 213,
            alpha: 255,
        },
    ],
    [
        `avatar_backgroundGreen`,
        {
            red: 118,
            green: 200,
            blue: 77,
            alpha: 255,
        },
    ],
    [
        `avatar_backgroundGroupCreateSpanBlue`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -8.8812363903033 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9360593976532607)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.2743284178772606 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `avatar_backgroundInProfileBlue`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -10.153848728716 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.912603389128749)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.7563548988728147 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `avatar_backgroundOrange`,
        {
            red: 242,
            green: 188,
            blue: 100,
            alpha: 255,
        },
    ],
    [
        `avatar_backgroundPink`,
        {
            red: 242,
            green: 116,
            blue: 154,
            alpha: 255,
        },
    ],
    [
        `avatar_backgroundRed`,
        {
            red: 220,
            green: 128,
            blue: 91,
            alpha: 255,
        },
    ],
    [
        `avatar_backgroundSaved`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -15.3886298059737 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8955711542164049)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `avatar_backgroundViolet`,
        {
            red: 142,
            green: 133,
            blue: 238,
            alpha: 255,
        },
    ],
    [
        `avatar_nameInMessageBlue`,
        {
            red: 121,
            green: 196,
            blue: 252,
            alpha: 255,
        },
    ],
    [
        `avatar_nameInMessageCyan`,
        {
            red: 93,
            green: 229,
            blue: 221,
            alpha: 255,
        },
    ],
    [
        `avatar_nameInMessageGreen`,
        {
            red: 148,
            green: 231,
            blue: 133,
            alpha: 255,
        },
    ],
    [
        `avatar_nameInMessageOrange`,
        {
            red: 255,
            green: 201,
            blue: 96,
            alpha: 255,
        },
    ],
    [
        `avatar_nameInMessagePink`,
        {
            red: 246,
            green: 119,
            blue: 155,
            alpha: 255,
        },
    ],
    [
        `avatar_nameInMessageRed`,
        {
            red: 255,
            green: 173,
            blue: 124,
            alpha: 255,
        },
    ],
    [
        `avatar_nameInMessageViolet`,
        {
            red: 154,
            green: 161,
            blue: 251,
            alpha: 255,
        },
    ],
    [
        `avatar_subtitleInProfileBlue`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -16.9356860273822 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.29687522650941733)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.16830442771710852 + 0.2004122316520832)),
        })), { alpha: 255 }),
    ],
    [
        `avatar_subtitleInProfileCyan`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -16.9356860273822 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.29687522650941733)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.16830442771710852 + 0.2004122316520832)),
        })), { alpha: 255 }),
    ],
    [
        `avatar_subtitleInProfileGreen`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -16.9356860273822 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.29687522650941733)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.16830442771710852 + 0.2004122316520832)),
        })), { alpha: 255 }),
    ],
    [
        `avatar_subtitleInProfileOrange`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -16.9356860273822 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.29687522650941733)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.16830442771710852 + 0.2004122316520832)),
        })), { alpha: 255 }),
    ],
    [
        `avatar_subtitleInProfilePink`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -16.9356860273822 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.29687522650941733)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.16830442771710852 + 0.2004122316520832)),
        })), { alpha: 255 }),
    ],
    [
        `avatar_subtitleInProfileRed`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -16.9356860273822 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.29687522650941733)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.16830442771710852 + 0.2004122316520832)),
        })), { alpha: 255 }),
    ],
    [
        `avatar_subtitleInProfileViolet`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -16.9356860273822 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.29687522650941733)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.16830442771710852 + 0.2004122316520832)),
        })), { alpha: 255 }),
    ],
    [
        `avatar_text`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `calls_callReceivedGreenIcon`,
        {
            red: 72,
            green: 221,
            blue: 118,
            alpha: 255,
        },
    ],
    [
        `calls_callReceivedRedIcon`,
        {
            red: 255,
            green: 72,
            blue: 72,
            alpha: 255,
        },
    ],
    [
        `changephoneinfo_image`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -13.4575238103532 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.5924983198495728)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.10406112556061402 + 0.012452764691830421)),
        })), { alpha: 255 }),
    ],
    [
        `changephoneinfo_image2`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -11.8382216688597 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9387260828386257)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.8606785446473928 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_addContact`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.7711964308699 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8358360561062034)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.0182765943106473 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_adminSelectedText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.9646258919624 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6148317393851706)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.6284247250284463 + 0.05064834576961982)),
        })), { alpha: 255 }),
    ],
    [
        `chat_adminText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -16.8539428567075 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.4014353069403103)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.22142499552995165 + 0.13985620403046328)),
        })), { alpha: 217 }),
    ],
    [
        `chat_attachActiveTab`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -13.5160911310149 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8902238121339014)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.0460542614509813 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_attachAudioBackground`,
        {
            red: 246,
            green: 111,
            blue: 107,
            alpha: 255,
        },
    ],
    [
        `chat_attachAudioIcon`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_attachCameraIcon1`,
        {
            red: 255,
            green: 130,
            blue: 85,
            alpha: 255,
        },
    ],
    [
        `chat_attachCheckBoxBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.3760975988507 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9943819850615297)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9729464270254421 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_attachCheckBoxCheck`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_attachContactBackground`,
        {
            red: 222,
            green: 176,
            blue: 69,
            alpha: 255,
        },
    ],
    [
        `chat_attachContactIcon`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_attachEmptyImage`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -15.1767749568476 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.3705023526444655)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.18518664299822504 + 0.14151328204110022)),
        })), { alpha: 255 }),
    ],
    [
        `chat_attachFileBackground`,
        {
            red: 90,
            green: 188,
            blue: 244,
            alpha: 255,
        },
    ],
    [
        `chat_attachFileIcon`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_attachGalleryBackground`,
        {
            red: 77,
            green: 150,
            blue: 245,
            alpha: 255,
        },
    ],
    [
        `chat_attachGalleryIcon`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_attachHideBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -10.4009836527188 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.7922955945601139)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.09734472465198594 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_attachLocationBackground`,
        {
            red: 54,
            green: 199,
            blue: 102,
            alpha: 255,
        },
    ],
    [
        `chat_attachLocationIcon`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_attachMediaBanBackground`,
        {
            red: 70,
            green: 70,
            blue: 70,
            alpha: 255,
        },
    ],
    [
        `chat_attachMediaBanText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_attachPermissionImage`,
        {
            red: 246,
            green: 246,
            blue: 246,
            alpha: 255,
        },
    ],
    [
        `chat_attachPermissionMark`,
        {
            red: 246,
            green: 87,
            blue: 78,
            alpha: 255,
        },
    ],
    [
        `chat_attachPermissionText`,
        {
            red: 246,
            green: 246,
            blue: 246,
            alpha: 255,
        },
    ],
    [
        `chat_attachPhotoBackground`,
        {
            red: 0,
            green: 0,
            blue: 0,
            alpha: 8,
        },
    ],
    [
        `chat_attachPollBackground`,
        {
            red: 222,
            green: 176,
            blue: 69,
            alpha: 255,
        },
    ],
    [
        `chat_attachPollIcon`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_attachUnactiveTab`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -21.3053149045489 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.623002843110567)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.37276225608225066 + 0.024975227520811875)),
        })), { alpha: 255 }),
    ],
    [
        `chat_botButtonText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_botKeyboardButtonBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -10.7436773792521 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6525821210342831)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.060936797914566215 + 0.0012572831243192252)),
        })), { alpha: 255 }),
    ],
    [
        `chat_botKeyboardButtonBackgroundPressed`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -9.615133007099 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6798120410244392)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.1277637831791658 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_botKeyboardButtonText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_botProgress`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_botSwitchToInlineText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.7711964308699 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8358360561062034)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.0182765943106473 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_editDoneIcon`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.3869865340452 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8865699549394952)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9029092814358181 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_emojiBottomPanelIcon`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -12.7118795307775 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.45784968719029984)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.17405558809133864 + 0.07588861826610134)),
        })), { alpha: 255 }),
    ],
    [
        `chat_emojiPanelBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -10.1588488271885 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6541011389637217)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.033976677454780654 + 0.0006239682921689747)),
        })), { alpha: 255 }),
    ],
    [
        `chat_emojiPanelBackspace`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -12.7118795307775 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.45784968719029984)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.17405558809133864 + 0.07588861826610134)),
        })), { alpha: 255 }),
    ],
    [
        `chat_emojiPanelBadgeBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -13.9467789188431 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9416020068705077)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9551507358336518 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_emojiPanelBadgeText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_emojiPanelEmptyText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -15.1767749568476 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.3705023526444655)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.18518664299822504 + 0.14151328204110022)),
        })), { alpha: 255 }),
    ],
    [
        `chat_emojiPanelIcon`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -12.7118795307775 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.45784968719029984)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.17405558809133864 + 0.07588861826610134)),
        })), { alpha: 255 }),
    ],
    [
        `chat_emojiPanelIconSelected`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.3869865340452 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8865699549394952)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9029092814358181 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_emojiPanelIconSelector`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.3869865340452 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8865699549394952)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9029092814358181 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_emojiPanelMasksIcon`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_emojiPanelMasksIconSelected`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -22.0420849062117 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8827039908485744)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.8441158479224109 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_emojiPanelNewTrending`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -11.7120655051657 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9463189780847785)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.8606785446473928 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_emojiPanelShadowLine`,
        {
            red: 0,
            green: 0,
            blue: 0,
            alpha: 50,
        },
    ],
    [
        `chat_emojiPanelStickerPackSelector`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -19.7977895334929 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.4051380446620228)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.6356945671419404 + 0.39229293300696577)),
        })), { alpha: 10 }),
    ],
    [
        `chat_emojiPanelStickerPackSelectorLine`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.3869865340452 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8865699549394952)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9029092814358181 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_emojiPanelStickerSetName`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -15.8615994101872 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.2560855400151402)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.11899400031199749 + 0.18238317730351428)),
        })), { alpha: 255 }),
    ],
    [
        `chat_emojiPanelStickerSetNameHighlight`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.3869865340452 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8865699549394952)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9029092814358181 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_emojiPanelStickerSetNameIcon`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -13.7863300033354 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.13077928285750762)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.1031939804337332 + 0.40423576252219157)),
        })), { alpha: 255 }),
    ],
    [
        `chat_emojiPanelTrendingDescription`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -15.1767749568476 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.3705023526444655)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.18518664299822504 + 0.14151328204110022)),
        })), { alpha: 255 }),
    ],
    [
        `chat_emojiPanelTrendingTitle`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_emojiSearchBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -19.7977895334929 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.4051380446620228)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.6356945671419404 + 0.39229293300696577)),
        })), { alpha: 10 }),
    ],
    [
        `chat_emojiSearchIcon`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -12.7118795307775 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.45784968719029984)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.17405558809133864 + 0.07588861826610134)),
        })), { alpha: 255 }),
    ],
    [
        `chat_fieldOverlayText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.3869865340452 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8865699549394952)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9029092814358181 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_gifSaveHintBackground`,
        {
            red: 17,
            green: 17,
            blue: 17,
            alpha: 204,
        },
    ],
    [
        `chat_gifSaveHintText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_goDownButton`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -10.3013713358815 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6784376195568965)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.04574921372894043 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_goDownButtonCounter`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -10.1588488271885 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6541011389637217)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.033976677454780654 + 0.0006239682921689747)),
        })), { alpha: 255 }),
    ],
    [
        `chat_goDownButtonCounterBackground`,
        {
            red: 246,
            green: 254,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_goDownButtonIcon`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_goDownButtonShadow`,
        {
            red: 0,
            green: 0,
            blue: 0,
            alpha: 255,
        },
    ],
    [
        `chat_inAudioCacheSeekbar`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -15.1267609901635 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.5119286290910507)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.13015134134462486 + 0.03760816142399751)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inAudioDurationSelectedText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.9646258919624 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6148317393851706)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.6284247250284463 + 0.05064834576961982)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inAudioDurationText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.0442296763894 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.38601902914950376)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.1874438645155509 + 0.13027758311057247)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inAudioPerfomerSelectedText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.9646258919624 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6148317393851706)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.6284247250284463 + 0.05064834576961982)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inAudioPerfomerText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.998935630665 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.39750083564875516)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.19301922225524903 + 0.12494768967658888)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inAudioProgress`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_inAudioSeekbar`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -15.1267609901635 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.5119286290910507)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.13015134134462486 + 0.03760816142399751)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inAudioSeekbarFill`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.6974744009223 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8232429985251257)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.8441158479224109 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inAudioSeekbarSelected`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -15.5206505174274 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6022573877857462)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.38483827826521616 + 0.03934507256985614)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inAudioSelectedProgress`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_inAudioTitleText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.7711964308699 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8358360561062034)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.0182765943106473 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inBubble`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -10.5223465445362 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6404123759889572)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.04394754399566605 + 0.0017223482563660632)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inBubbleSelected`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -12.6057371907804 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.7728909571529972)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.12504368200436017 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inBubbleShadow`,
        {
            red: 0,
            green: 0,
            blue: 0,
            alpha: 50,
        },
    ],
    [
        `chat_inContactBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -12.1414228798565 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.851356159173067)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.6741607177439006 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inContactIcon`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_inContactNameText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.7711964308699 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8358360561062034)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.0182765943106473 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inContactPhoneSelectedText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.9646258919624 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6148317393851706)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.6284247250284463 + 0.05064834576961982)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inContactPhoneText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.998935630665 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.39750083564875516)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.19301922225524903 + 0.12494768967658888)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inDownCall`,
        {
            red: 0,
            green: 200,
            blue: 83,
            alpha: 255,
        },
    ],
    [
        `chat_inFileBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -12.2037332983134 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6083648354672813)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.06536747659684858 + 0.005988604048666601)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inFileBackgroundSelected`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -7.7722632180845 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.7817094858355564)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.1964707192541385 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inFileIcon`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -15.019352435305 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.7192508524723752)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.05698932533764434 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inFileInfoSelectedText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.9646258919624 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6148317393851706)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.6284247250284463 + 0.05064834576961982)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inFileInfoText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -17.0064017825179 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.39750083564875516)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.19301922225524903 + 0.12494768967658888)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inFileNameText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_inFileProgress`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_inFileProgressSelected`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_inFileSelectedIcon`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -8.5601651935764 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9540245351878642)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.13051809146861665 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inForwardedNameText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.7711964308699 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8358360561062034)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.0182765943106473 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inGreenCall`,
        {
            red: 72,
            green: 221,
            blue: 118,
            alpha: 255,
        },
    ],
    [
        `chat_inInstant`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.7711964308699 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8358360561062034)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.0182765943106473 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inInstantSelected`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -16.8456569396911 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.5574665045373552)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.7478708570216875 + 0.14004799713979374)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inLoader`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -12.1414228798565 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.851356159173067)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.6741607177439006 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inLoaderPhoto`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.2926455773571 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.7033170789647848)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.05698932533764434 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inLoaderPhotoIcon`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_inLoaderPhotoIconSelected`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_inLoaderPhotoSelected`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -8.1234414300896 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.943333859962477)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.13051809146861665 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inLoaderSelected`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -12.1414228798565 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.851356159173067)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.6741607177439006 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inLocationBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -13.1755955608625 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6216592399992462)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.08026134568323455 + 0.0055549993607129505)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inLocationIcon`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_inMediaIcon`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_inMediaIconSelected`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_inMenu`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.9358613212788 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.5430303860433234)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.5201781687220601 + 0.11321910256756398)),
        })), { alpha: 121 }),
    ],
    [
        `chat_inMenuSelected`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.9646258919624 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6148317393851706)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.6284247250284463 + 0.05064834576961982)),
        })), { alpha: 165 }),
    ],
    [
        `chat_inPreviewInstantSelectedText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -16.8456569396911 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.5574665045373552)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.7478708570216875 + 0.14004799713979374)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inPreviewInstantText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.7711964308699 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8358360561062034)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.0182765943106473 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inPreviewLine`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.7711964308699 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8358360561062034)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.0182765943106473 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inReplyLine`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.7711964308699 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8358360561062034)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.0182765943106473 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inReplyMediaMessageSelectedText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.9646258919624 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6148317393851706)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.6284247250284463 + 0.05064834576961982)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inReplyMediaMessageText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.998935630665 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.39750083564875516)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.19301922225524903 + 0.12494768967658888)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inReplyMessageText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_inReplyNameText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.7711964308699 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8358360561062034)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.0182765943106473 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inSentClock`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -15.0095651917494 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.512689159427725)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.17364919950051858 + 0.04985649257833427)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inSentClockSelected`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.9646258919624 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6148317393851706)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.6284247250284463 + 0.05064834576961982)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inSiteNameText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.7711964308699 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8358360561062034)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.0182765943106473 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inTimeSelectedText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.9646258919624 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6148317393851706)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.6284247250284463 + 0.05064834576961982)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inTimeText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -16.8539428567075 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.4014353069403103)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.22142499552995165 + 0.13985620403046328)),
        })), { alpha: 217 }),
    ],
    [
        `chat_inUpCall`,
        {
            red: 255,
            green: 72,
            blue: 72,
            alpha: 255,
        },
    ],
    [
        `chat_inVenueInfoSelectedText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.9646258919624 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6148317393851706)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.6284247250284463 + 0.05064834576961982)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inVenueInfoText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -17.0064017825179 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.39750083564875516)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.19301922225524903 + 0.12494768967658888)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inViaBotNameText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.7711964308699 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8358360561062034)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.0182765943106473 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inViews`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -17.0064017825179 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.39750083564875516)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.19301922225524903 + 0.12494768967658888)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inViewsSelected`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.9646258919624 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6148317393851706)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.6284247250284463 + 0.05064834576961982)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inVoiceSeekbar`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -15.0095651917494 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.512689159427725)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.17364919950051858 + 0.04985649257833427)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inVoiceSeekbarFill`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.3869865340452 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8865699549394952)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9029092814358181 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inVoiceSeekbarSelected`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -15.5206505174274 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6022573877857462)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.38483827826521616 + 0.03934507256985614)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inlineResultIcon`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.7711964308699 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8358360561062034)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.0182765943106473 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_linkSelectBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -12.60189159203 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8747516715891054)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.8035277810167148 + 0)),
        })), { alpha: 90 }),
    ],
    [
        `chat_lockIcon`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_mediaBroadcast`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_mediaInfoText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_mediaLoaderPhoto`,
        {
            red: 0,
            green: 0,
            blue: 0,
            alpha: 102,
        },
    ],
    [
        `chat_mediaLoaderPhotoIcon`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_mediaLoaderPhotoIconSelected`,
        {
            red: 217,
            green: 217,
            blue: 217,
            alpha: 255,
        },
    ],
    [
        `chat_mediaLoaderPhotoSelected`,
        {
            red: 0,
            green: 0,
            blue: 0,
            alpha: 127,
        },
    ],
    [
        `chat_mediaMenu`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_mediaProgress`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_mediaSentCheck`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_mediaSentClock`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 178,
        },
    ],
    [
        `chat_mediaTimeBackground`,
        {
            red: 0,
            green: 0,
            blue: 0,
            alpha: 102,
        },
    ],
    [
        `chat_mediaTimeText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_mediaViews`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_messageLinkIn`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.7711964308699 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8358360561062034)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.0182765943106473 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_messageLinkOut`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -12.5685703144888 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.7040239243105577)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.0460542614509813 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_messagePanelBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -10.3013713358815 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6784376195568965)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.04574921372894043 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_messagePanelCancelInlineBot`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -15.1767749568476 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.3705023526444655)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.18518664299822504 + 0.14151328204110022)),
        })), { alpha: 255 }),
    ],
    [
        `chat_messagePanelCursor`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -13.0186700604193 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9099605640748597)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.7409995032643613 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_messagePanelHint`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.2322920410021 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.5026095261074461)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.21994584857996338 + 0.06863189307656305)),
        })), { alpha: 255 }),
    ],
    [
        `chat_messagePanelIcons`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -11.8779277691423 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.45699841497841415)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.1880514782301662 + 0.08247845530251909)),
        })), { alpha: 255 }),
    ],
    [
        `chat_messagePanelPressedSend`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_messagePanelSend`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.3869865340452 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8865699549394952)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9029092814358181 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_messagePanelShadow`,
        {
            red: 0,
            green: 0,
            blue: 0,
            alpha: 121,
        },
    ],
    [
        `chat_messagePanelText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_messagePanelVideoFrame`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -11.3491648415629 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9614539376392977)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9729464270254421 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_messagePanelVoiceBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -11.3119370647281 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8759630440315859)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.6316361609902318 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_messagePanelVoiceDelete`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_messagePanelVoiceDuration`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_messagePanelVoicePressed`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_messagePanelVoiceShadow`,
        {
            red: 0,
            green: 0,
            blue: 0,
            alpha: 13,
        },
    ],
    [
        `chat_messageTextIn`,
        {
            red: 250,
            green: 250,
            blue: 250,
            alpha: 255,
        },
    ],
    [
        `chat_messageTextOut`,
        {
            red: 250,
            green: 250,
            blue: 250,
            alpha: 255,
        },
    ],
    [
        `chat_muteIcon`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -20.8744705541832 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.49032737269366544)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.11088719294212153 + 0.03812326918877729)),
        })), { alpha: 255 }),
    ],
    [
        `chat_outAudioCacheSeekbar`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -9.1871634300136 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.7921003207983304)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.5708573983943251 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_outAudioDurationSelectedText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -17.4315257007079 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.47988620680436195)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.7198293102065428 + 0.2678357138040168)),
        })), { alpha: 255 }),
    ],
    [
        `chat_outAudioDurationText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -16.6548657418281 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6529599913555298)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.7560241702800166 + 0.015171447572634063)),
        })), { alpha: 255 }),
    ],
    [
        `chat_outAudioPerfomerSelectedText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -17.4315257007079 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.47988620680436195)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.7198293102065428 + 0.2678357138040168)),
        })), { alpha: 255 }),
    ],
    [
        `chat_outAudioPerfomerText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -16.6548657418281 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6529599913555298)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.7560241702800166 + 0.015171447572634063)),
        })), { alpha: 255 }),
    ],
    [
        `chat_outAudioProgress`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_outAudioSeekbar`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -9.1871634300136 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.7921003207983304)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.5708573983943251 + 0)),
        })), { alpha: 230 }),
    ],
    [
        `chat_outAudioSeekbarFill`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -13.004404042633 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.7830938466473134)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.0091141605731628 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_outAudioSeekbarSelected`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -9.0338533246609 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.7942560746923004)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.7034120299191401 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_outAudioSelectedProgress`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_outAudioTitleText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_outBroadcast`,
        {
            red: 70,
            green: 170,
            blue: 54,
            alpha: 255,
        },
    ],
    [
        `chat_outBubble`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -7.88458804979 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8429902616516105)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.2658568813314531 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_outBubbleSelected`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -9.6539320106575 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8694216019715092)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.4484335208265145 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_outBubbleShadow`,
        {
            red: 0,
            green: 0,
            blue: 0,
            alpha: 50,
        },
    ],
    [
        `chat_outContactBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -12.3576835120251 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8282477578310914)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.7108382961966219 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_outContactIcon`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_outContactNameText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_outContactPhoneSelectedText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -17.4315257007079 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.47988620680436195)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.7198293102065428 + 0.2678357138040168)),
        })), { alpha: 255 }),
    ],
    [
        `chat_outContactPhoneText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -16.6548657418281 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6529599913555298)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.7560241702800166 + 0.015171447572634063)),
        })), { alpha: 255 }),
    ],
    [
        `chat_outFileBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -9.9351288415532 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8373198031788077)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.3380253309515477 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_outFileBackgroundSelected`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -10.1994983304716 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8696966728855695)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.5386318181635006 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_outFileIcon`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -8.2956296281666 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8398427851707846)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.26167913977903573 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_outFileInfoSelectedText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -17.4315257007079 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.47988620680436195)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.7198293102065428 + 0.2678357138040168)),
        })), { alpha: 255 }),
    ],
    [
        `chat_outFileInfoText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -16.6548657418281 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6529599913555298)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.7560241702800166 + 0.015171447572634063)),
        })), { alpha: 255 }),
    ],
    [
        `chat_outFileNameText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_outFileProgress`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_outFileProgressSelected`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_outFileSelectedIcon`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -8.3310362296293 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9980622176869177)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.6247054756640616 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_outForwardedNameText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -11.6948752309768 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.7673605321485957)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.0460542614509813 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_outGreenCall`,
        {
            red: 72,
            green: 221,
            blue: 118,
            alpha: 255,
        },
    ],
    [
        `chat_outInstant`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -11.6948752309768 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.7673605321485957)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.0460542614509813 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_outInstantSelected`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -17.4315257007079 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.47988620680436195)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.7198293102065428 + 0.2678357138040168)),
        })), { alpha: 255 }),
    ],
    [
        `chat_outLoader`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -12.3576835120251 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8282477578310914)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.7108382961966219 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_outLoaderPhoto`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -7.9985562603298 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.833461457488195)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.26167913977903573 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_outLoaderPhotoIcon`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_outLoaderPhotoIconSelected`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_outLoaderPhotoSelected`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -10.6728150684377 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9367799894261473)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.38833475767116143 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_outLoaderSelected`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -12.3576835120251 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8282477578310914)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.7108382961966219 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_outLocationBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -8.9602610077466 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.7821517400882694)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.38312008839364897 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_outLocationIcon`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_outMediaIcon`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_outMediaIconSelected`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_outMenu`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -9.0937400934194 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.782420916243451)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.6456315548145871 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_outMenuSelected`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -17.4315257007079 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.47988620680436195)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.7198293102065428 + 0.2678357138040168)),
        })), { alpha: 223 }),
    ],
    [
        `chat_outPreviewInstantSelectedText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -17.4315257007079 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.47988620680436195)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.7198293102065428 + 0.2678357138040168)),
        })), { alpha: 255 }),
    ],
    [
        `chat_outPreviewInstantText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -12.5685703144888 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.7040239243105577)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.0460542614509813 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_outPreviewLine`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -12.5685703144888 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.7040239243105577)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.0460542614509813 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_outReplyLine`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -12.5685703144888 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.7040239243105577)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.0460542614509813 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_outReplyMediaMessageSelectedText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_outReplyMediaMessageText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -16.6548657418281 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6529599913555298)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.7560241702800166 + 0.015171447572634063)),
        })), { alpha: 255 }),
    ],
    [
        `chat_outReplyMessageText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_outReplyNameText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -12.5685703144888 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.7040239243105577)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.0460542614509813 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_outSentCheck`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -13.1357098273975 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.7881315883480748)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.0460542614509813 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_outSentCheckRead`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -13.1357098273975 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.7881315883480748)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.0460542614509813 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_outSentCheckReadSelected`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -17.4315257007079 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.47988620680436195)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.7198293102065428 + 0.2678357138040168)),
        })), { alpha: 255 }),
    ],
    [
        `chat_outSentCheckSelected`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -17.4315257007079 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.47988620680436195)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.7198293102065428 + 0.2678357138040168)),
        })), { alpha: 255 }),
    ],
    [
        `chat_outSentClock`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -16.6189558468226 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6513444859680103)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.6103477003917145 + 0.013725650572305435)),
        })), { alpha: 255 }),
    ],
    [
        `chat_outSentClockSelected`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -17.4315257007079 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.47988620680436195)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.7198293102065428 + 0.2678357138040168)),
        })), { alpha: 255 }),
    ],
    [
        `chat_outSiteNameText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_outTimeSelectedText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -17.4315257007079 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.47988620680436195)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.7198293102065428 + 0.2678357138040168)),
        })), { alpha: 255 }),
    ],
    [
        `chat_outTimeText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -16.6548657418281 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6529599913555298)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.7560241702800166 + 0.015171447572634063)),
        })), { alpha: 255 }),
    ],
    [
        `chat_outUpCall`,
        {
            red: 0,
            green: 200,
            blue: 83,
            alpha: 255,
        },
    ],
    [
        `chat_outVenueInfoSelectedText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -17.4315257007079 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.47988620680436195)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.7198293102065428 + 0.2678357138040168)),
        })), { alpha: 255 }),
    ],
    [
        `chat_outVenueInfoText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -16.6548657418281 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6529599913555298)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.7560241702800166 + 0.015171447572634063)),
        })), { alpha: 255 }),
    ],
    [
        `chat_outVenueNameText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -19.0782169294815 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.37694897116827675)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.5914636164602084 + 0.4345765432475849)),
        })), { alpha: 255 }),
    ],
    [
        `chat_outViaBotNameText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -11.6948752309768 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.7673605321485957)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.0460542614509813 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_outViews`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -16.6548657418281 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6529599913555298)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.7560241702800166 + 0.015171447572634063)),
        })), { alpha: 255 }),
    ],
    [
        `chat_outViewsSelected`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -17.4315257007079 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.47988620680436195)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.7198293102065428 + 0.2678357138040168)),
        })), { alpha: 255 }),
    ],
    [
        `chat_outVoiceSeekbar`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -9.1871634300136 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.7921003207983304)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.5708573983943251 + 0)),
        })), { alpha: 230 }),
    ],
    [
        `chat_outVoiceSeekbarFill`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -13.004404042633 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.7830938466473134)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.0091141605731628 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_outVoiceSeekbarSelected`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -9.3423907605408 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.7955866137056242)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.7486542360975742 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_previewDurationText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_previewGameText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_recordTime`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_recordVoiceCancel`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -15.1767749568476 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.3705023526444655)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.18518664299822504 + 0.14151328204110022)),
        })), { alpha: 255 }),
    ],
    [
        `chat_recordedVoiceBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -9.3376854281963 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9171303589404519)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.8035277810167148 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_recordedVoiceDot`,
        {
            red: 237,
            green: 93,
            blue: 84,
            alpha: 255,
        },
    ],
    [
        `chat_recordedVoicePlayPause`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_recordedVoicePlayPausePressed`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -15.657602804192 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.29199568382275126)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.4419854690576735 + 0.5421599169519423)),
        })), { alpha: 255 }),
    ],
    [
        `chat_recordedVoiceProgress`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -13.6887721153456 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6397810281739512)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9423170401828098 + 0.037855747730385005)),
        })), { alpha: 255 }),
    ],
    [
        `chat_recordedVoiceProgressInner`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_replyPanelClose`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.5554693389941 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.46042792611038313)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.17223006288885734 + 0.07375022306207463)),
        })), { alpha: 255 }),
    ],
    [
        `chat_replyPanelIcons`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.7711964308699 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8358360561062034)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.0182765943106473 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_replyPanelLine`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -15.5231933504172 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.3147854194896924)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.00606859079022641 + 0.006485077269685395)),
        })), { alpha: 106 }),
    ],
    [
        `chat_replyPanelMessage`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -17.0064017825179 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.39750083564875516)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.19301922225524903 + 0.12494768967658888)),
        })), { alpha: 255 }),
    ],
    [
        `chat_replyPanelName`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.7711964308699 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8358360561062034)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.0182765943106473 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_reportSpam`,
        {
            red: 233,
            green: 100,
            blue: 97,
            alpha: 255,
        },
    ],
    [
        `chat_searchPanelIcons`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.7711964308699 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8358360561062034)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.0182765943106473 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_searchPanelText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.7711964308699 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8358360561062034)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.0182765943106473 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_secretChatStatusText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -17.0064017825179 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.39750083564875516)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.19301922225524903 + 0.12494768967658888)),
        })), { alpha: 255 }),
    ],
    [
        `chat_secretTimeText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -15.4611464996843 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.3250797590474478)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.4237562748708095 + 0.42567016972598065)),
        })), { alpha: 255 }),
    ],
    [
        `chat_secretTimerBackground`,
        {
            red: 30,
            green: 30,
            blue: 30,
            alpha: 182,
        },
    ],
    [
        `chat_secretTimerText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_selectedBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -7.5388754975979 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8851826801737769)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.8035277810167148 + 0)),
        })), { alpha: 42 }),
    ],
    [
        `chat_sentError`,
        {
            red: 246,
            green: 87,
            blue: 78,
            alpha: 255,
        },
    ],
    [
        `chat_sentErrorIcon`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_serviceBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -11.3615012868261 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.5901003275329872)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.07618682926030737 + 0.009450128488407933)),
        })), { alpha: 130 }),
    ],
    [
        `chat_serviceBackgroundSelected`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -9.5899924012619 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8852964938499267)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.4427609499233579 + 0)),
        })), { alpha: 150 }),
    ],
    [
        `chat_serviceIcon`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_serviceLink`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_serviceText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_shareBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -17.0623028513486 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.5811512970075386)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.3477211556789152 + 0.04891385224244056)),
        })), { alpha: 102 }),
    ],
    [
        `chat_shareBackgroundSelected`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -17.0623028513486 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.5811512970075386)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.3477211556789152 + 0.04891385224244056)),
        })), { alpha: 153 }),
    ],
    [
        `chat_status`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -12.8379924046043 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.848415677562845)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9729464270254421 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_stickerNameText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_stickerReplyLine`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_stickerReplyMessageText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_stickerReplyNameText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_stickerViaBotNameText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_stickersHintPanel`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -6.2389297960621 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6158202194884325)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.07555032014278655 + 0.005963328919229582)),
        })), { alpha: 255 }),
    ],
    [
        `chat_textSelectBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -12.60189159203 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8747516715891054)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.8035277810167148 + 0)),
        })), { alpha: 90 }),
    ],
    [
        `chat_topPanelBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -10.3013713358815 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6784376195568965)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.04574921372894043 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_topPanelClose`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -9.3933522461938 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.3482402645208724)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.09194531453254742 + 0.08037212954045107)),
        })), { alpha: 255 }),
    ],
    [
        `chat_topPanelLine`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -11.3575930928546 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.7961729548330385)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.4150274998535093 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_topPanelMessage`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -16.9356860273822 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.29687522650941733)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.16830442771710852 + 0.2004122316520832)),
        })), { alpha: 255 }),
    ],
    [
        `chat_topPanelTitle`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -13.8553029850589 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9067505872732085)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.7409995032643613 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_unreadMessagesStartArrowIcon`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -16.1852477200722 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.49370509693631054)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.15076332596056757 + 0.05049210817603686)),
        })), { alpha: 255 }),
    ],
    [
        `chat_unreadMessagesStartBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -13.51015180124 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6869310751818124)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.05698932533764434 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_unreadMessagesStartText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 218,
        },
    ],
    [
        `chat_wallpaper`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -12.8235010592108 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6556830508140026)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.020873280949310884 + 0.00033426267422523347)),
        })), { alpha: 255 }),
    ],
    [
        `chats_actionBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -11.6228490614747 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8771873171685892)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.7641015699941521 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chats_actionIcon`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chats_actionMessage`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -13.390847032342 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8774652570448762)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.8523737292953775 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chats_actionPressedBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -12.3752526018649 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8961932984439639)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.7034120299191401 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chats_actionUnreadBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -13.8506435432934 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8750031886730768)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.7876184144849647 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chats_actionUnreadIcon`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chats_actionUnreadPressedBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -12.7781821807632 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9259581017099671)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.6886957832471782 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chats_archiveBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -11.836225679213 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8759630440315859)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.6316361609902318 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chats_archiveIcon`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chats_archivePinBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -16.1640303325804 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6362509397828044)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.07024255988622757 + 0.0032100801813451044)),
        })), { alpha: 255 }),
    ],
    [
        `chats_archivePullDownBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -16.803224848984 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.0673799120698773)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.06383938348151502 + 0.5427985893591468)),
        })), { alpha: 255 }),
    ],
    [
        `chats_archivePullDownBackgroundActive`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -12.9448392379791 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8547327109148765)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.7797332498932225 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chats_archiveText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chats_attachMessage`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -23.1364619737713 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.36078149694901346)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.17774760821274602 + 0.14406673632053837)),
        })), { alpha: 255 }),
    ],
    [
        `chats_date`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -15.310756381338 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.34945513167877185)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.14156773704767164 + 0.12284786862421995)),
        })), { alpha: 255 }),
    ],
    [
        `chats_draft`,
        {
            red: 252,
            green: 71,
            blue: 74,
            alpha: 217,
        },
    ],
    [
        `chats_mentionIcon`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chats_menuBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -10.1588488271885 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6541011389637217)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.033976677454780654 + 0.0006239682921689747)),
        })), { alpha: 255 }),
    ],
    [
        `chats_menuCloud`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chats_menuCloudBackgroundCats`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -10.153848728716 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.912603389128749)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.7563548988728147 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chats_menuItemCheck`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -13.908076423 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.828520147022961)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.5136344524446108 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chats_menuItemIcon`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -17.3277619021984 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.3705023526444655)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.18518664299822504 + 0.14151328204110022)),
        })), { alpha: 255 }),
    ],
    [
        `chats_menuItemText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 233,
        },
    ],
    [
        `chats_menuName`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chats_menuPhone`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -18.833068531953 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.28186576279344194)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.3197858257700138 + 0.4173484007390172)),
        })), { alpha: 147 }),
    ],
    [
        `chats_menuPhoneCats`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.5445308823525 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.4619045510596839)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.12425465270242081 + 0.0526569637320639)),
        })), { alpha: 255 }),
    ],
    [
        `chats_menuTopBackgroundCats`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -10.3013713358815 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6784376195568965)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.04574921372894043 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chats_menuTopShadow`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -12.7251695410297 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6647347175347523)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.020216245869311686 + 0.00005616860313780242)),
        })), { alpha: 164 }),
    ],
    [
        `chats_message`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -15.1767749568476 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.3705023526444655)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.18518664299822504 + 0.14151328204110022)),
        })), { alpha: 255 }),
    ],
    [
        `chats_messageArchived`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -15.1767749568476 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.3705023526444655)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.18518664299822504 + 0.14151328204110022)),
        })), { alpha: 255 }),
    ],
    [
        `chats_message_threeLines`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -15.1767749568476 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.3705023526444655)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.18518664299822504 + 0.14151328204110022)),
        })), { alpha: 255 }),
    ],
    [
        `chats_muteIcon`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -20.8744705541832 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.49032737269366544)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.11088719294212153 + 0.03812326918877729)),
        })), { alpha: 255 }),
    ],
    [
        `chats_name`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -13.9154785615795 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.10326463771928693)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.14658281234724854 + 0.7645319117428394)),
        })), { alpha: 255 }),
    ],
    [
        `chats_nameArchived`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -13.9154785615795 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.10326463771928693)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.14658281234724854 + 0.7645319117428394)),
        })), { alpha: 255 }),
    ],
    [
        `chats_nameIcon`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -13.9154785615795 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.10326463771928693)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.14658281234724854 + 0.7645319117428394)),
        })), { alpha: 255 }),
    ],
    [
        `chats_nameMessage`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -13.9154785615795 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.10326463771928693)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.14658281234724854 + 0.7645319117428394)),
        })), { alpha: 255 }),
    ],
    [
        `chats_nameMessageArchived`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -15.1767749568476 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.3705023526444655)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.18518664299822504 + 0.14151328204110022)),
        })), { alpha: 255 }),
    ],
    [
        `chats_nameMessageArchived_threeLines`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -13.9154785615795 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.10326463771928693)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.14658281234724854 + 0.7645319117428394)),
        })), { alpha: 255 }),
    ],
    [
        `chats_nameMessage_threeLines`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -13.9154785615795 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.10326463771928693)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.14658281234724854 + 0.7645319117428394)),
        })), { alpha: 255 }),
    ],
    [
        `chats_onlineCircle`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.3869865340452 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8865699549394952)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9029092814358181 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chats_pinnedIcon`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -15.1695970767942 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.569906516406307)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.19302887245470524 + 0.031330041639445944)),
        })), { alpha: 255 }),
    ],
    [
        `chats_pinnedOverlay`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 0,
        },
    ],
    [
        `chats_secretIcon`,
        {
            red: 113,
            green: 215,
            blue: 86,
            alpha: 255,
        },
    ],
    [
        `chats_secretName`,
        {
            red: 113,
            green: 215,
            blue: 86,
            alpha: 255,
        },
    ],
    [
        `chats_sentCheck`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.3869865340452 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8865699549394952)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9029092814358181 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chats_sentClock`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -22.3025863655608 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.5185702932353584)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.11727430970076985 + 0.03201735576341753)),
        })), { alpha: 255 }),
    ],
    [
        `chats_sentError`,
        {
            red: 213,
            green: 82,
            blue: 82,
            alpha: 255,
        },
    ],
    [
        `chats_sentErrorIcon`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chats_sentReadCheck`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.3869865340452 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8865699549394952)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9029092814358181 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chats_tabletSelectedOverlay`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 15,
        },
    ],
    [
        `chats_unreadCounter`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.3869865340452 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8865699549394952)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9029092814358181 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chats_unreadCounterMuted`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -15.4547379653164 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6385616865137657)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.12501577891313664 + 0.005260064184287855)),
        })), { alpha: 255 }),
    ],
    [
        `chats_unreadCounterText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chats_verifiedBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.3869865340452 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8865699549394952)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9029092814358181 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chats_verifiedCheck`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `checkbox`,
        {
            red: 94,
            green: 194,
            blue: 69,
            alpha: 255,
        },
    ],
    [
        `checkboxCheck`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `checkboxDisabled`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -15.4547379653164 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6385616865137657)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.12501577891313664 + 0.005260064184287855)),
        })), { alpha: 255 }),
    ],
    [
        `checkboxSquareBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -17.6987921687832 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8709651748479802)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.8196230458338652 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `checkboxSquareCheck`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `checkboxSquareDisabled`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -13.8584098176865 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.5478645376189241)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.10499586899384722 + 0.021765519270230998)),
        })), { alpha: 100 }),
    ],
    [
        `checkboxSquareUnchecked`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -12.96519925343 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.5578507869789225)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.16736137387005834 + 0.031208668957824256)),
        })), { alpha: 255 }),
    ],
    [
        `contacts_inviteBackground`,
        {
            red: 85,
            green: 190,
            blue: 97,
            alpha: 255,
        },
    ],
    [
        `contacts_inviteText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `contextProgressInner1`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -11.2732869489909 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.534847362909216)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.1385820825346754 + 0.03265141636072463)),
        })), { alpha: 255 }),
    ],
    [
        `contextProgressInner2`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -19.5858126442408 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.45211902799713904)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.6537808166885755 + 0.2965848166574603)),
        })), { alpha: 255 }),
    ],
    [
        `contextProgressInner3`,
        {
            red: 179,
            green: 179,
            blue: 179,
            alpha: 255,
        },
    ],
    [
        `contextProgressInner4`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -11.2732869489909 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.534847362909216)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.1385820825346754 + 0.03265141636072463)),
        })), { alpha: 255 }),
    ],
    [
        `contextProgressOuter1`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -11.7897774441794 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8867441403314866)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9819162064165924 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `contextProgressOuter2`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `contextProgressOuter3`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `contextProgressOuter4`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -11.7897774441794 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8867441403314866)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9819162064165924 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `dialogBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -10.3013713358815 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6784376195568965)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.04574921372894043 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `dialogBackgroundGray`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -11.5034166456012 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6468785222818215)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.031174300562858755 + 0.0009116430887164446)),
        })), { alpha: 255 }),
    ],
    [
        `dialogBadgeBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.3869865340452 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8865699549394952)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9029092814358181 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `dialogBadgeText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `dialogButton`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.3869865340452 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8865699549394952)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9029092814358181 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `dialogButtonSelector`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -7.6622079534338 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6836293496585495)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.09734472465198594 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `dialogCameraIcon`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `dialogCheckboxSquareBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -13.0931518745794 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9610200974742811)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.7718943276657506 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `dialogCheckboxSquareCheck`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `dialogCheckboxSquareDisabled`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -13.8584098176865 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.5478645376189241)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.10499586899384722 + 0.021765519270230998)),
        })), { alpha: 255 }),
    ],
    [
        `dialogCheckboxSquareUnchecked`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -12.96519925343 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.5578507869789225)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.16736137387005834 + 0.031208668957824256)),
        })), { alpha: 255 }),
    ],
    [
        `dialogFloatingButton`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.3869865340452 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8865699549394952)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9029092814358181 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `dialogFloatingButtonPressed`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.3869865340452 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8865699549394952)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9029092814358181 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `dialogFloatingIcon`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `dialogGrayLine`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -6.1811857440101 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.21870817315587485)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.002075783622510164 + 0.004064439192626062)),
        })), { alpha: 255 }),
    ],
    [
        `dialogIcon`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -16.1355818942838 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.37207641696964455)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.23468193676059623 + 0.1776281018001317)),
        })), { alpha: 255 }),
    ],
    [
        `dialogInputField`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -15.1767749568476 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.3705023526444655)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.18518664299822504 + 0.14151328204110022)),
        })), { alpha: 255 }),
    ],
    [
        `dialogInputFieldActivated`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -12.9171550523209 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9945332394287482)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9114972883261669 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `dialogLineProgress`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -12.788858324792 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8005134028966223)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.38312008839364897 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `dialogLineProgressBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -15.5898960638154 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.5239674696183529)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.5823894520708258 + 0.151626982498525)),
        })), { alpha: 255 }),
    ],
    [
        `dialogLinkSelection`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -12.60189159203 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8747516715891054)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.8035277810167148 + 0)),
        })), { alpha: 51 }),
    ],
    [
        `dialogProgressCircle`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.3869865340452 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8865699549394952)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9029092814358181 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `dialogRadioBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -12.96519925343 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.5578507869789225)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.16736137387005834 + 0.031208668957824256)),
        })), { alpha: 255 }),
    ],
    [
        `dialogRadioBackgroundChecked`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -12.9171550523209 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9945332394287482)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9114972883261669 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `dialogRedIcon`,
        {
            red: 238,
            green: 104,
            blue: 111,
            alpha: 222,
        },
    ],
    [
        `dialogRoundCheckBox`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.3869865340452 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8865699549394952)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9029092814358181 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `dialogRoundCheckBoxCheck`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `dialogScrollGlow`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -17.0154462428627 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.019024644950866552)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.02776494049555985 + 0.9035683151071164)),
        })), { alpha: 255 }),
    ],
    [
        `dialogSearchBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -9.6715872822574 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6978596997302147)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.07360047793952296 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `dialogSearchHint`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.1967524617714 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.2721561857309994)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.12274735758039723 + 0.17009763469829597)),
        })), { alpha: 255 }),
    ],
    [
        `dialogSearchIcon`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -7.9729476360488 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.341574573165785)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.1472155870869004 + 0.13394313362235816)),
        })), { alpha: 255 }),
    ],
    [
        `dialogSearchText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `dialogShadowLine`,
        {
            red: 0,
            green: 0,
            blue: 0,
            alpha: 20,
        },
    ],
    [
        `dialogTextBlack`,
        {
            red: 246,
            green: 246,
            blue: 246,
            alpha: 255,
        },
    ],
    [
        `dialogTextBlue`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.3869865340452 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8865699549394952)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9029092814358181 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `dialogTextBlue2`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.3869865340452 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8865699549394952)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9029092814358181 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `dialogTextBlue3`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.3869865340452 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8865699549394952)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9029092814358181 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `dialogTextBlue4`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.3869865340452 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8865699549394952)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9029092814358181 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `dialogTextGray`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -15.1767749568476 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.3705023526444655)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.18518664299822504 + 0.14151328204110022)),
        })), { alpha: 255 }),
    ],
    [
        `dialogTextGray2`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -15.1767749568476 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.3705023526444655)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.18518664299822504 + 0.14151328204110022)),
        })), { alpha: 255 }),
    ],
    [
        `dialogTextGray3`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -15.1767749568476 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.3705023526444655)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.18518664299822504 + 0.14151328204110022)),
        })), { alpha: 255 }),
    ],
    [
        `dialogTextGray4`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -15.1767749568476 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.3705023526444655)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.18518664299822504 + 0.14151328204110022)),
        })), { alpha: 255 }),
    ],
    [
        `dialogTextHint`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -15.1767749568476 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.3705023526444655)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.18518664299822504 + 0.14151328204110022)),
        })), { alpha: 255 }),
    ],
    [
        `dialogTextLink`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.3869865340452 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8865699549394952)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9029092814358181 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `dialogTextRed`,
        {
            red: 238,
            green: 104,
            blue: 111,
            alpha: 255,
        },
    ],
    [
        `dialogTextRed2`,
        {
            red: 238,
            green: 104,
            blue: 111,
            alpha: 255,
        },
    ],
    [
        `dialogTopBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.5938944302779 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8291185581261963)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.8196230458338652 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `dialog_inlineProgress`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -17.3277619021984 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.3705023526444655)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.18518664299822504 + 0.14151328204110022)),
        })), { alpha: 255 }),
    ],
    [
        `dialog_inlineProgressBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -12.8235010592108 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6556830508140026)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.020873280949310884 + 0.00033426267422523347)),
        })), { alpha: 255 }),
    ],
    [
        `dialog_liveLocationProgress`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -12.3576835120251 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8282477578310914)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.7108382961966219 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `divider`,
        {
            red: 0,
            green: 0,
            blue: 0,
            alpha: 149,
        },
    ],
    [
        `emptyListPlaceholder`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -15.1767749568476 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.3705023526444655)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.18518664299822504 + 0.14151328204110022)),
        })), { alpha: 255 }),
    ],
    [
        `fastScrollActive`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.1997247884095 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9162441454297255)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.7409995032643613 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `fastScrollInactive`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -11.6818824108031 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.5542642231866872)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.08688049330197044 + 0.016843291733277067)),
        })), { alpha: 255 }),
    ],
    [
        `fastScrollText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `featuredStickers_addButton`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -11.9861656579033 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9397006953728787)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.8690303698852341 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `featuredStickers_addButtonPressed`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -11.2667503273355 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9602132147275996)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.7641015699941521 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `featuredStickers_addedIcon`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.3869865340452 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8865699549394952)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9029092814358181 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `featuredStickers_buttonProgress`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `featuredStickers_buttonText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `featuredStickers_delButton`,
        {
            red: 217,
            green: 87,
            blue: 87,
            alpha: 255,
        },
    ],
    [
        `featuredStickers_delButtonPressed`,
        {
            red: 198,
            green: 73,
            blue: 73,
            alpha: 255,
        },
    ],
    [
        `featuredStickers_unread`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -11.7120655051657 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9463189780847785)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.8606785446473928 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `files_folderIcon`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.1458017501973 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.3704372101385791)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.20152039218983606 + 0.1540559312852008)),
        })), { alpha: 255 }),
    ],
    [
        `files_folderIconBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -11.2134661008113 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6325022960566553)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.09015563672239386 + 0.0046553248315763405)),
        })), { alpha: 255 }),
    ],
    [
        `files_iconText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `graySection`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -10.97802803311 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6815023177305395)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.021222937844128188 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `groupcreate_checkboxCheck`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `groupcreate_cursor`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.3869865340452 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8865699549394952)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9029092814358181 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `groupcreate_hintText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -15.1767749568476 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.3705023526444655)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.18518664299822504 + 0.14151328204110022)),
        })), { alpha: 255 }),
    ],
    [
        `groupcreate_offlineText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -15.1767749568476 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.3705023526444655)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.18518664299822504 + 0.14151328204110022)),
        })), { alpha: 255 }),
    ],
    [
        `groupcreate_onlineText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.3869865340452 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8865699549394952)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9029092814358181 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `groupcreate_sectionShadow`,
        {
            red: 0,
            green: 0,
            blue: 0,
            alpha: 255,
        },
    ],
    [
        `groupcreate_sectionText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -15.1767749568476 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.3705023526444655)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.18518664299822504 + 0.14151328204110022)),
        })), { alpha: 255 }),
    ],
    [
        `groupcreate_spanBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -10.6255304212548 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6962682140669624)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.07969404295879075 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `groupcreate_spanDelete`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `groupcreate_spanText`,
        {
            red: 245,
            green: 245,
            blue: 245,
            alpha: 255,
        },
    ],
    [
        `inappPlayerBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -10.3013713358815 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6784376195568965)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.04574921372894043 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `inappPlayerClose`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -15.1767749568476 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.3705023526444655)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.18518664299822504 + 0.14151328204110022)),
        })), { alpha: 255 }),
    ],
    [
        `inappPlayerPerformer`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `inappPlayerPlayPause`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.3869865340452 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8865699549394952)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9029092814358181 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `inappPlayerTitle`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -15.1767749568476 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.3705023526444655)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.18518664299822504 + 0.14151328204110022)),
        })), { alpha: 255 }),
    ],
    [
        `key_chat_messagePanelVoiceLock`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `key_chat_messagePanelVoiceLockBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -9.8988660279031 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.7127771825874215)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.10208166034144146 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `key_chat_messagePanelVoiceLockShadow`,
        {
            red: 0,
            green: 0,
            blue: 0,
            alpha: 255,
        },
    ],
    [
        `key_chats_menuTopShadow`,
        {
            red: 12,
            green: 12,
            blue: 12,
            alpha: 0,
        },
    ],
    [
        `key_graySectionText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -15.1767749568476 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.3705023526444655)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.18518664299822504 + 0.14151328204110022)),
        })), { alpha: 255 }),
    ],
    [
        `key_player_progressCachedBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -10.5517078889318 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6270438985099496)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.21963017295918874 + 0.013267364398292165)),
        })), { alpha: 255 }),
    ],
    [
        `key_sheet_other`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 67,
        },
    ],
    [
        `key_sheet_scrollUp`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 37,
        },
    ],
    [
        `listSelector`,
        {
            red: 0,
            green: 0,
            blue: 0,
            alpha: 46,
        },
    ],
    [
        `listSelectorSDK21`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 17,
        },
    ],
    [
        `location_liveLocationProgress`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -12.3576835120251 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8282477578310914)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.7108382961966219 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `location_placeLocationBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -12.3576835120251 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8282477578310914)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.7108382961966219 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `location_sendLiveLocationBackground`,
        {
            red: 255,
            green: 100,
            blue: 100,
            alpha: 255,
        },
    ],
    [
        `location_sendLiveLocationIcon`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `location_sendLocationBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -12.3576835120251 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8282477578310914)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.7108382961966219 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `location_sendLocationIcon`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `login_progressInner`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -18.1421720231043 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.15812028441565168)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.22029691852004593 + 0.6773251339738733)),
        })), { alpha: 255 }),
    ],
    [
        `login_progressOuter`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.1570268574592 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8387267434789766)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.6598061904155045 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `musicPicker_buttonBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.0605142181041 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.904842303112969)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.8606785446473928 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `musicPicker_buttonIcon`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `musicPicker_checkbox`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -16.5438404559329 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 1.0153402779880463)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9729464270254421 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `musicPicker_checkboxCheck`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `passport_authorizeBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -10.6658168718845 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.921239331604535)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.5136344524446108 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `passport_authorizeBackgroundSelected`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -8.5347824302813 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9235245443413436)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.7108382961966219 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `passport_authorizeText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `picker_badge`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -9.6167645943458 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9360699354973193)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9729464270254421 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `picker_badgeText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `picker_disabledButton`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -15.7733882460892 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.5808922619211454)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.19674977405655988 + 0.027772958858010326)),
        })), { alpha: 255 }),
    ],
    [
        `picker_enabledButton`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -13.5160911310149 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8902238121339014)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.0460542614509813 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `player_actionBar`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -10.3013713358815 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6784376195568965)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.04574921372894043 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `player_actionBarItems`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `player_actionBarSelector`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -10.132376266121 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6565987773180244)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.08911769990909812 + 0.00130631562058563)),
        })), { alpha: 255 }),
    ],
    [
        `player_actionBarSubtitle`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -15.1767749568476 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.3705023526444655)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.18518664299822504 + 0.14151328204110022)),
        })), { alpha: 255 }),
    ],
    [
        `player_actionBarTitle`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `player_actionBarTop`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -22.2631776648491 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6468691683826929)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.027730442057782183 + 0.0008113279580118281)),
        })), { alpha: 255 }),
    ],
    [
        `player_background`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -11.552497896528 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6537924255037524)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.03784317288435923 + 0.0007123855212466863)),
        })), { alpha: 255 }),
    ],
    [
        `player_button`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `player_buttonActive`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.3869865340452 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8865699549394952)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9029092814358181 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `player_placeholder`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.3126323251699 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.5719992433086529)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.2541297799555711 + 0.04020744252536158)),
        })), { alpha: 255 }),
    ],
    [
        `player_placeholderBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -10.9594653704963 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6569006991661277)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.08268502862414077 + 0.001175136237135269)),
        })), { alpha: 255 }),
    ],
    [
        `player_progress`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.3869865340452 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8865699549394952)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9029092814358181 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `player_progressBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -10.4884600156268 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6040415396228216)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.09249234491984734 + 0.009167130018946422)),
        })), { alpha: 255 }),
    ],
    [
        `player_seekBarBackground`,
        {
            red: 82,
            green: 82,
            blue: 82,
            alpha: 71,
        },
    ],
    [
        `player_time`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -15.1767749568476 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.3705023526444655)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.18518664299822504 + 0.14151328204110022)),
        })), { alpha: 255 }),
    ],
    [
        `profile_actionBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -13.8506435432934 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8750031886730768)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.7876184144849647 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `profile_actionIcon`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `profile_actionPressedBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -12.7781821807632 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9259581017099671)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.6886957832471782 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `profile_adminIcon`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -15.1767749568476 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.3705023526444655)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.18518664299822504 + 0.14151328204110022)),
        })), { alpha: 255 }),
    ],
    [
        `profile_creatorIcon`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.3869865340452 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8865699549394952)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9029092814358181 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `profile_status`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -12.8379924046043 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.848415677562845)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9729464270254421 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `profile_title`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `profile_verifiedBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -10.5848094178771 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9051892727112274)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.0274873739885289 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `profile_verifiedCheck`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `progressCircle`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -10.5848094178771 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9051892727112274)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.0274873739885289 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `radioBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -15.1767749568476 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.3705023526444655)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.18518664299822504 + 0.14151328204110022)),
        })), { alpha: 158 }),
    ],
    [
        `radioBackgroundChecked`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.3869865340452 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8865699549394952)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9029092814358181 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `returnToCallBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -10.3083195274307 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8976583985148304)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.8359048244371196 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `returnToCallText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `sessions_devicesImage`,
        {
            red: 150,
            green: 150,
            blue: 150,
            alpha: 255,
        },
    ],
    [
        `sharedMedia_actionMode`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -10.3013713358815 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6784376195568965)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.04574921372894043 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `sharedMedia_linkPlaceholder`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.5025104168816 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6855337672211949)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.06225198428461075 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `sharedMedia_linkPlaceholderText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -21.4924973783772 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.1375979889214674)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.11782324497000006 + 0.4330885787855036)),
        })), { alpha: 255 }),
    ],
    [
        `sharedMedia_photoPlaceholder`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -12.8235010592108 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6556830508140026)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.020873280949310884 + 0.00033426267422523347)),
        })), { alpha: 255 }),
    ],
    [
        `sharedMedia_startStopLoadIcon`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.3869865340452 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8865699549394952)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9029092814358181 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `sheet_other`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `stickers_menu`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -18.4663239140785 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.5156198657353451)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.17170519597246026 + 0.04808516544993658)),
        })), { alpha: 255 }),
    ],
    [
        `stickers_menuSelector`,
        {
            red: 0,
            green: 0,
            blue: 0,
            alpha: 15,
        },
    ],
    [
        `switch2Track`,
        {
            red: 245,
            green: 126,
            blue: 126,
            alpha: 255,
        },
    ],
    [
        `switch2TrackChecked`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.49024384798 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9324324582571595)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.8523737292953775 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `switchThumb`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -9.4866810305336 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6747527798766243)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.19297085412833265 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `switchThumbChecked`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -13.8506435432934 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8750031886730768)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.7876184144849647 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `switchTrack`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -12.3465985963748 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.38916219644187805)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.09521293385485617 + 0.06490543605789806)),
        })), { alpha: 255 }),
    ],
    [
        `switchTrackBlue`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -12.3465985963748 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.38916219644187805)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.09521293385485617 + 0.06490543605789806)),
        })), { alpha: 255 }),
    ],
    [
        `switchTrackBlueChecked`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -21.492648376979 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8156126603874981)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.0460542614509813 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `switchTrackBlueSelector`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -17.4139677604504 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.5122746810537777)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.7684120215806666 + 0.2213919363017535)),
        })), { alpha: 25 }),
    ],
    [
        `switchTrackBlueSelectorChecked`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -21.0338979031213 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.7673605321485957)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.0460542614509813 + 0)),
        })), { alpha: 50 }),
    ],
    [
        `switchTrackBlueThumb`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -10.1588488271885 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6541011389637217)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.033976677454780654 + 0.0006239682921689747)),
        })), { alpha: 255 }),
    ],
    [
        `switchTrackBlueThumbChecked`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -13.0751340362309 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8455511829306055)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.4259953590940123 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `switchTrackChecked`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -13.5296776119025 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8571664898700436)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.7108382961966219 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `undo_background`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -13.3851664146716 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6001519615965905)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.0411847205413879 + 0.004363533858388121)),
        })), { alpha: 245 }),
    ],
    [
        `undo_cancelColor`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -15.0067331118543 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.7961724108610874)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.0460542614509813 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `undo_infoColor`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `wallet_addressConfirmBackground`,
        {
            red: 0,
            green: 0,
            blue: 0,
            alpha: 13,
        },
    ],
    [
        `wallet_blackBackground`,
        {
            red: 0,
            green: 0,
            blue: 0,
            alpha: 255,
        },
    ],
    [
        `wallet_blackBackgroundSelector`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 64,
        },
    ],
    [
        `wallet_blackText`,
        {
            red: 34,
            green: 34,
            blue: 34,
            alpha: 255,
        },
    ],
    [
        `wallet_buttonBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -11.2671529384097 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9573124342802183)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.8277405825623322 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `wallet_buttonPressedBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -9.1321484734463 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 1.0027700935729222)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.7034120299191401 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `wallet_buttonText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `wallet_commentText`,
        {
            red: 153,
            green: 153,
            blue: 153,
            alpha: 255,
        },
    ],
    [
        `wallet_dateText`,
        {
            red: 153,
            green: 153,
            blue: 153,
            alpha: 255,
        },
    ],
    [
        `wallet_grayBackground`,
        {
            red: 41,
            green: 41,
            blue: 41,
            alpha: 255,
        },
    ],
    [
        `wallet_graySettingsBackground`,
        {
            red: 240,
            green: 240,
            blue: 240,
            alpha: 255,
        },
    ],
    [
        `wallet_grayText`,
        {
            red: 119,
            green: 119,
            blue: 119,
            alpha: 255,
        },
    ],
    [
        `wallet_grayText2`,
        {
            red: 102,
            green: 102,
            blue: 102,
            alpha: 255,
        },
    ],
    [
        `wallet_greenText`,
        {
            red: 55,
            green: 168,
            blue: 24,
            alpha: 255,
        },
    ],
    [
        `wallet_pullBackground`,
        {
            red: 33,
            green: 33,
            blue: 33,
            alpha: 255,
        },
    ],
    [
        `wallet_redText`,
        {
            red: 219,
            green: 64,
            blue: 64,
            alpha: 255,
        },
    ],
    [
        `wallet_releaseBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -9.1768484587343 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9782713843568022)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.5198188771390229 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `wallet_statusText`,
        {
            red: 128,
            green: 128,
            blue: 128,
            alpha: 255,
        },
    ],
    [
        `wallet_whiteBackground`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `wallet_whiteText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `windowBackgroundCheckText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `windowBackgroundChecked`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -13.0751340362309 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8455511829306055)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.4259953590940123 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `windowBackgroundGray`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -12.8235010592108 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6556830508140026)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.020873280949310884 + 0.00033426267422523347)),
        })), { alpha: 255 }),
    ],
    [
        `windowBackgroundGrayShadow`,
        {
            red: 0,
            green: 0,
            blue: 0,
            alpha: 255,
        },
    ],
    [
        `windowBackgroundUnchecked`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -10.1588488271885 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6541011389637217)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.033976677454780654 + 0.0006239682921689747)),
        })), { alpha: 255 }),
    ],
    [
        `windowBackgroundWhite`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -10.1588488271885 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6541011389637217)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.033976677454780654 + 0.0006239682921689747)),
        })), { alpha: 255 }),
    ],
    [
        `windowBackgroundWhiteBlackText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `windowBackgroundWhiteBlueButton`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.7711964308699 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8358360561062034)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.0182765943106473 + 0)),
        })), { alpha: 224 }),
    ],
    [
        `windowBackgroundWhiteBlueHeader`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.7711964308699 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8358360561062034)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.0182765943106473 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `windowBackgroundWhiteBlueIcon`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.7711964308699 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8358360561062034)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.0182765943106473 + 0)),
        })), { alpha: 224 }),
    ],
    [
        `windowBackgroundWhiteBlueText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.3869865340452 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8865699549394952)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9029092814358181 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `windowBackgroundWhiteBlueText2`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -11.9630710391574 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9739957587476789)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.6960312188835258 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `windowBackgroundWhiteBlueText3`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.3869865340452 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8865699549394952)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9029092814358181 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `windowBackgroundWhiteBlueText4`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.3869865340452 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8865699549394952)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9029092814358181 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `windowBackgroundWhiteBlueText5`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.3869865340452 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8865699549394952)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9029092814358181 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `windowBackgroundWhiteBlueText6`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -9.78404034537 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9696043980703165)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.6526964266883367 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `windowBackgroundWhiteBlueText7`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.7711964308699 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8358360561062034)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.0182765943106473 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `windowBackgroundWhiteGrayIcon`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -15.1767749568476 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.3705023526444655)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.18518664299822504 + 0.14151328204110022)),
        })), { alpha: 255 }),
    ],
    [
        `windowBackgroundWhiteGrayLine`,
        {
            red: 219,
            green: 219,
            blue: 219,
            alpha: 255,
        },
    ],
    [
        `windowBackgroundWhiteGrayText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -15.1767749568476 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.3705023526444655)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.18518664299822504 + 0.14151328204110022)),
        })), { alpha: 255 }),
    ],
    [
        `windowBackgroundWhiteGrayText2`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -15.1767749568476 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.3705023526444655)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.18518664299822504 + 0.14151328204110022)),
        })), { alpha: 255 }),
    ],
    [
        `windowBackgroundWhiteGrayText3`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -15.1767749568476 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.3705023526444655)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.18518664299822504 + 0.14151328204110022)),
        })), { alpha: 255 }),
    ],
    [
        `windowBackgroundWhiteGrayText4`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -15.1767749568476 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.3705023526444655)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.18518664299822504 + 0.14151328204110022)),
        })), { alpha: 200 }),
    ],
    [
        `windowBackgroundWhiteGrayText5`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -15.1767749568476 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.3705023526444655)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.18518664299822504 + 0.14151328204110022)),
        })), { alpha: 255 }),
    ],
    [
        `windowBackgroundWhiteGrayText6`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -15.1767749568476 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.3705023526444655)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.18518664299822504 + 0.14151328204110022)),
        })), { alpha: 255 }),
    ],
    [
        `windowBackgroundWhiteGrayText7`,
        {
            red: 198,
            green: 198,
            blue: 198,
            alpha: 255,
        },
    ],
    [
        `windowBackgroundWhiteGrayText8`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -15.1767749568476 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.3705023526444655)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.18518664299822504 + 0.14151328204110022)),
        })), { alpha: 255 }),
    ],
    [
        `windowBackgroundWhiteGreenText`,
        {
            red: 97,
            green: 189,
            blue: 103,
            alpha: 255,
        },
    ],
    [
        `windowBackgroundWhiteGreenText2`,
        {
            red: 97,
            green: 211,
            blue: 107,
            alpha: 255,
        },
    ],
    [
        `windowBackgroundWhiteHintText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -15.1767749568476 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.3705023526444655)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.18518664299822504 + 0.14151328204110022)),
        })), { alpha: 255 }),
    ],
    [
        `windowBackgroundWhiteInputField`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -12.466372555716 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.616106408042502)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.1536707934001226 + 0.012055651397686948)),
        })), { alpha: 255 }),
    ],
    [
        `windowBackgroundWhiteInputFieldActivated`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -11.6376798641056 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8522398900596436)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9029092814358181 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `windowBackgroundWhiteLinkSelection`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -10.5848094178771 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9051892727112274)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.0274873739885289 + 0)),
        })), { alpha: 51 }),
    ],
    [
        `windowBackgroundWhiteLinkText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.7376997147072 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8855103477765854)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.7876184144849647 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `windowBackgroundWhiteRedText`,
        {
            red: 205,
            green: 90,
            blue: 90,
            alpha: 255,
        },
    ],
    [
        `windowBackgroundWhiteRedText2`,
        {
            red: 241,
            green: 109,
            blue: 102,
            alpha: 255,
        },
    ],
    [
        `windowBackgroundWhiteRedText3`,
        {
            red: 210,
            green: 73,
            blue: 73,
            alpha: 255,
        },
    ],
    [
        `windowBackgroundWhiteRedText4`,
        {
            red: 207,
            green: 92,
            blue: 95,
            alpha: 255,
        },
    ],
    [
        `windowBackgroundWhiteRedText5`,
        {
            red: 238,
            green: 104,
            blue: 111,
            alpha: 255,
        },
    ],
    [
        `windowBackgroundWhiteRedText6`,
        {
            red: 255,
            green: 102,
            blue: 102,
            alpha: 255,
        },
    ],
    [
        `windowBackgroundWhiteValueText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.7711964308699 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8358360561062034)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.0182765943106473 + 0)),
        })), { alpha: 224 }),
    ],
]);
exports.default = dark;
//# sourceMappingURL=dark.js.map