"use strict";
// This file was automatically generated by .attheme default theme
// generator, available at:
//     https://gitlab.com/snejugal/attheme-default-theme-generator
Object.defineProperty(exports, "__esModule", { value: true });
const __1 = require("..");
const color_1 = require("@snejugal/color");
/**
 * Generates the Arctic theme.
 */
const arctic = (accent) => new __1.default([
    [
        `actionBarActionModeDefault`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `actionBarActionModeDefaultIcon`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -3.4263074307096 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.1530774627476619)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.0439351293077208 + 0.1224608530998267)),
        })), { alpha: 255 }),
    ],
    [
        `actionBarActionModeDefaultSelector`,
        {
            red: 240,
            green: 240,
            blue: 240,
            alpha: 255,
        },
    ],
    [
        `actionBarActionModeDefaultTop`,
        {
            red: 0,
            green: 0,
            blue: 0,
            alpha: 16,
        },
    ],
    [
        `actionBarBrowser`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `actionBarDefault`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `actionBarDefaultArchived`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `actionBarDefaultArchivedIcon`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -2.8299165865797 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.27425036655870494)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.017628841501245097 + 0.02095580439335104)),
        })), { alpha: 255 }),
    ],
    [
        `actionBarDefaultArchivedSearch`,
        {
            red: 0,
            green: 0,
            blue: 0,
            alpha: 255,
        },
    ],
    [
        `actionBarDefaultArchivedSearchPlaceholder`,
        {
            red: 123,
            green: 123,
            blue: 123,
            alpha: 136,
        },
    ],
    [
        `actionBarDefaultArchivedSelector`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -6.9908624240661 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.36472442103554154)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.023444522939926996 + 0.01612431144117663)),
        })), { alpha: 16 }),
    ],
    [
        `actionBarDefaultArchivedTitle`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -13.5664434028521 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.278898290637576)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.02275423468498622 + 0.02628267164032797)),
        })), { alpha: 255 }),
    ],
    [
        `actionBarDefaultIcon`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -17.349666417691 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.4684272003740311)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.07870654194616798 + 0.02767193869271029)),
        })), { alpha: 255 }),
    ],
    [
        `actionBarDefaultSearch`,
        {
            red: 0,
            green: 0,
            blue: 0,
            alpha: 255,
        },
    ],
    [
        `actionBarDefaultSearchArchivedPlaceholder`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 136,
        },
    ],
    [
        `actionBarDefaultSearchPlaceholder`,
        {
            red: 123,
            green: 123,
            blue: 123,
            alpha: 136,
        },
    ],
    [
        `actionBarDefaultSelector`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -6.9908624240661 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.36472442103554154)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.023444522939926996 + 0.01612431144117663)),
        })), { alpha: 16 }),
    ],
    [
        `actionBarDefaultSubmenuBackground`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `actionBarDefaultSubmenuItem`,
        {
            red: 34,
            green: 34,
            blue: 34,
            alpha: 255,
        },
    ],
    [
        `actionBarDefaultSubmenuItemIcon`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -7.4753911724027 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.16993318987799508)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.04971443252707629 + 0.12072812265466994)),
        })), { alpha: 255 }),
    ],
    [
        `actionBarDefaultSubtitle`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -8.6000537243876 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.20969421817502015)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.12234662899053468 + 0.22150131522268984)),
        })), { alpha: 255 }),
    ],
    [
        `actionBarDefaultTitle`,
        {
            red: 51,
            green: 51,
            blue: 51,
            alpha: 255,
        },
    ],
    [
        `actionBarTabActiveText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -4.5066788727428 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 1.0067111952218388)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.0193836526641076 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `actionBarTabLine`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -3.7267841549825 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 1.0112374278776535)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.119577014499426 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `actionBarTabSelector`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -6.9908624240661 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.36472442103554154)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.023444522939926996 + 0.01612431144117663)),
        })), { alpha: 8 }),
    ],
    [
        `actionBarTabUnactiveText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -8.6000537243876 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.20969421817502015)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.12234662899053468 + 0.22150131522268984)),
        })), { alpha: 255 }),
    ],
    [
        `actionBarWhiteSelector`,
        {
            red: 0,
            green: 0,
            blue: 0,
            alpha: 47,
        },
    ],
    [
        `avatar_actionBarIconBlue`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -5.9520813445997 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.36959425530339135)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.05630613953900013 + 0.03759876693767717)),
        })), { alpha: 255 }),
    ],
    [
        `avatar_actionBarIconCyan`,
        {
            red: 129,
            green: 123,
            blue: 123,
            alpha: 255,
        },
    ],
    [
        `avatar_actionBarIconGreen`,
        {
            red: 129,
            green: 123,
            blue: 123,
            alpha: 255,
        },
    ],
    [
        `avatar_actionBarIconOrange`,
        {
            red: 123,
            green: 123,
            blue: 123,
            alpha: 255,
        },
    ],
    [
        `avatar_actionBarIconPink`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + 18.4237988411394 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.10195612205505128)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.04041198526740162 + 0.18595313970845082)),
        })), { alpha: 255 }),
    ],
    [
        `avatar_actionBarIconRed`,
        {
            red: 123,
            green: 123,
            blue: 123,
            alpha: 255,
        },
    ],
    [
        `avatar_actionBarIconViolet`,
        {
            red: 123,
            green: 123,
            blue: 123,
            alpha: 255,
        },
    ],
    [
        `avatar_actionBarSelectorBlue`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -2.9018309245414 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.36146969428177417)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.0355567216998009 + 0.024940823137388088)),
        })), { alpha: 15 }),
    ],
    [
        `avatar_actionBarSelectorCyan`,
        {
            red: 123,
            green: 123,
            blue: 123,
            alpha: 255,
        },
    ],
    [
        `avatar_actionBarSelectorGreen`,
        {
            red: 123,
            green: 123,
            blue: 123,
            alpha: 255,
        },
    ],
    [
        `avatar_actionBarSelectorOrange`,
        {
            red: 123,
            green: 123,
            blue: 123,
            alpha: 255,
        },
    ],
    [
        `avatar_actionBarSelectorPink`,
        {
            red: 123,
            green: 123,
            blue: 123,
            alpha: 255,
        },
    ],
    [
        `avatar_actionBarSelectorRed`,
        {
            red: 123,
            green: 123,
            blue: 123,
            alpha: 255,
        },
    ],
    [
        `avatar_actionBarSelectorViolet`,
        {
            red: 123,
            green: 123,
            blue: 123,
            alpha: 255,
        },
    ],
    [
        `avatar_backgroundActionBarBlue`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `avatar_backgroundActionBarCyan`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `avatar_backgroundActionBarGreen`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `avatar_backgroundActionBarOrange`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `avatar_backgroundActionBarPink`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `avatar_backgroundActionBarRed`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `avatar_backgroundActionBarViolet`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `avatar_backgroundArchived`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -12.7927064133167 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.2670427158985285)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.25712459593102366 + 0.3196650351331558)),
        })), { alpha: 255 }),
    ],
    [
        `avatar_backgroundArchivedHidden`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -9.8686233921001 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8981369452553084)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.150707771158863 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `avatar_backgroundBlue`,
        {
            red: 80,
            green: 165,
            blue: 230,
            alpha: 255,
        },
    ],
    [
        `avatar_backgroundCyan`,
        {
            red: 95,
            green: 190,
            blue: 213,
            alpha: 255,
        },
    ],
    [
        `avatar_backgroundGreen`,
        {
            red: 118,
            green: 200,
            blue: 77,
            alpha: 255,
        },
    ],
    [
        `avatar_backgroundGroupCreateSpanBlue`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -12.636396766586 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.15567836483434028)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.2614408783850746 + 0.7129136520555978)),
        })), { alpha: 255 }),
    ],
    [
        `avatar_backgroundInProfileBlue`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -1.7622470591542 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 1.0004127252571953)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.009664691980958 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `avatar_backgroundOrange`,
        {
            red: 242,
            green: 140,
            blue: 72,
            alpha: 255,
        },
    ],
    [
        `avatar_backgroundPink`,
        {
            red: 242,
            green: 116,
            blue: 154,
            alpha: 255,
        },
    ],
    [
        `avatar_backgroundRed`,
        {
            red: 229,
            green: 101,
            blue: 85,
            alpha: 255,
        },
    ],
    [
        `avatar_backgroundSaved`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -7.6226085918456 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9810399710456312)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.2037027677054892 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `avatar_backgroundViolet`,
        {
            red: 142,
            green: 133,
            blue: 238,
            alpha: 255,
        },
    ],
    [
        `avatar_nameInMessageBlue`,
        {
            red: 50,
            green: 138,
            blue: 229,
            alpha: 255,
        },
    ],
    [
        `avatar_nameInMessageCyan`,
        {
            red: 55,
            green: 158,
            blue: 184,
            alpha: 255,
        },
    ],
    [
        `avatar_nameInMessageGreen`,
        {
            red: 80,
            green: 178,
            blue: 50,
            alpha: 255,
        },
    ],
    [
        `avatar_nameInMessageOrange`,
        {
            red: 216,
            green: 123,
            blue: 41,
            alpha: 255,
        },
    ],
    [
        `avatar_nameInMessagePink`,
        {
            red: 203,
            green: 79,
            blue: 134,
            alpha: 255,
        },
    ],
    [
        `avatar_nameInMessageRed`,
        {
            red: 202,
            green: 86,
            blue: 80,
            alpha: 255,
        },
    ],
    [
        `avatar_nameInMessageViolet`,
        {
            red: 131,
            green: 111,
            blue: 230,
            alpha: 255,
        },
    ],
    [
        `avatar_subtitleInProfileBlue`,
        {
            red: 141,
            green: 141,
            blue: 141,
            alpha: 255,
        },
    ],
    [
        `avatar_subtitleInProfileCyan`,
        {
            red: 0,
            green: 0,
            blue: 0,
            alpha: 255,
        },
    ],
    [
        `avatar_subtitleInProfileGreen`,
        {
            red: 0,
            green: 0,
            blue: 0,
            alpha: 255,
        },
    ],
    [
        `avatar_subtitleInProfileOrange`,
        {
            red: 0,
            green: 0,
            blue: 0,
            alpha: 255,
        },
    ],
    [
        `avatar_subtitleInProfilePink`,
        {
            red: 0,
            green: 0,
            blue: 0,
            alpha: 255,
        },
    ],
    [
        `avatar_subtitleInProfileRed`,
        {
            red: 0,
            green: 0,
            blue: 0,
            alpha: 255,
        },
    ],
    [
        `avatar_subtitleInProfileViolet`,
        {
            red: 0,
            green: 0,
            blue: 0,
            alpha: 255,
        },
    ],
    [
        `avatar_text`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `calls_callReceivedGreenIcon`,
        {
            red: 47,
            green: 199,
            blue: 102,
            alpha: 255,
        },
    ],
    [
        `calls_callReceivedRedIcon`,
        {
            red: 255,
            green: 72,
            blue: 72,
            alpha: 255,
        },
    ],
    [
        `changephoneinfo_image`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -13.2203022806848 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.14762917989492852)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.14882701478765847 + 0.43469938889838516)),
        })), { alpha: 255 }),
    ],
    [
        `changephoneinfo_image2`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -6.318215254986 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.941415511768971)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9903894897954554 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_addContact`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -0.3550660569794 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 1.0258329650958695)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9431466082619258 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_adminSelectedText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -10.0356785785398 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.4885682853807881)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.5210064347936507 + 0.15778238928701355)),
        })), { alpha: 255 }),
    ],
    [
        `chat_adminText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -13.7618227079426 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.12241858997546896)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.13200153780157634 + 0.4875388870702829)),
        })), { alpha: 255 }),
    ],
    [
        `chat_attachActiveTab`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -5.666686773552 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 1.0052985239285928)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.0990993743518895 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_attachAudioBackground`,
        {
            red: 235,
            green: 96,
            blue: 96,
            alpha: 255,
        },
    ],
    [
        `chat_attachAudioIcon`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_attachCheckBoxBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -8.856091184977 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9972308668890718)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.119577014499426 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_attachCheckBoxCheck`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_attachContactBackground`,
        {
            red: 242,
            green: 192,
            blue: 75,
            alpha: 255,
        },
    ],
    [
        `chat_attachContactIcon`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_attachEmptyImage`,
        {
            red: 204,
            green: 204,
            blue: 204,
            alpha: 255,
        },
    ],
    [
        `chat_attachFileBackground`,
        {
            red: 52,
            green: 185,
            blue: 241,
            alpha: 255,
        },
    ],
    [
        `chat_attachFileIcon`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_attachGalleryBackground`,
        {
            red: 69,
            green: 157,
            blue: 245,
            alpha: 255,
        },
    ],
    [
        `chat_attachGalleryIcon`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_attachLocationBackground`,
        {
            red: 54,
            green: 199,
            blue: 102,
            alpha: 255,
        },
    ],
    [
        `chat_attachLocationIcon`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_attachMediaBanBackground`,
        {
            red: 70,
            green: 70,
            blue: 70,
            alpha: 255,
        },
    ],
    [
        `chat_attachMediaBanText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_attachPermissionImage`,
        {
            red: 51,
            green: 51,
            blue: 51,
            alpha: 255,
        },
    ],
    [
        `chat_attachPermissionMark`,
        {
            red: 255,
            green: 0,
            blue: 0,
            alpha: 255,
        },
    ],
    [
        `chat_attachPermissionText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -24.5088585527147 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.19111519151516526)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.06715654655446178 + 0.13882619453591422)),
        })), { alpha: 255 }),
    ],
    [
        `chat_attachPhotoBackground`,
        {
            red: 0,
            green: 0,
            blue: 0,
            alpha: 8,
        },
    ],
    [
        `chat_attachPollBackground`,
        {
            red: 242,
            green: 192,
            blue: 75,
            alpha: 255,
        },
    ],
    [
        `chat_attachPollIcon`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_attachSendBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -0.6074877360722 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9888794899285922)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.150707771158863 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_attachUnactiveTab`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -15.8378776969528 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.16618875862998803)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.10259580075386437 + 0.256680924158776)),
        })), { alpha: 255 }),
    ],
    [
        `chat_botButtonText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_botKeyboardButtonBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -17.370033529432 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.04995661121518281)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.07349864483458976 + 0.753786112103765)),
        })), { alpha: 255 }),
    ],
    [
        `chat_botKeyboardButtonBackgroundPressed`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -18.7213115628292 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.08642403926025101)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.10273496785431752 + 0.573025700694669)),
        })), { alpha: 255 }),
    ],
    [
        `chat_botKeyboardButtonText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -19.5256205090078 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.5509661510811651)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.07778078633918999 + 0.013569487522741716)),
        })), { alpha: 255 }),
    ],
    [
        `chat_botProgress`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_botSwitchToInlineText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + 0.6821506084601 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 1.000654248869236)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9431466082619258 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_editDoneIcon`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + 2.6570636951033 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 1.034672898503241)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.1929923373746314 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_emojiBottomPanelIcon`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -8.1312845863197 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.159157121752399)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.0889310946468214 + 0.23558764827633358)),
        })), { alpha: 255 }),
    ],
    [
        `chat_emojiPanelBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -5.3797822695664 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.04767379503783988)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.07859735744860503 + 0.8478023348310282)),
        })), { alpha: 255 }),
    ],
    [
        `chat_emojiPanelBackspace`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -8.1312845863197 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.159157121752399)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.0889310946468214 + 0.23558764827633358)),
        })), { alpha: 255 }),
    ],
    [
        `chat_emojiPanelBadgeBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -6.9609916180199 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9758406970936081)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.0788419012662136 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_emojiPanelBadgeText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_emojiPanelEmptyText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -13.078534724602 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.17637533407840641)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.1134974851279732 + 0.262109852411944)),
        })), { alpha: 255 }),
    ],
    [
        `chat_emojiPanelIcon`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -10.7506191150566 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.17949627495640835)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.13198257981972045 + 0.2975930603285065)),
        })), { alpha: 255 }),
    ],
    [
        `chat_emojiPanelIconSelected`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -4.8236856231915 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 1.009983135981551)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9154454511854958 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_emojiPanelMasksIcon`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_emojiPanelMasksIconSelected`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -16.522078492338 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.885232917756348)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9713306659626713 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_emojiPanelNewTrending`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -2.2782784767151 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 1.0020088410099468)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.0488670130671511 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_emojiPanelShadowLine`,
        {
            red: 0,
            green: 0,
            blue: 0,
            alpha: 18,
        },
    ],
    [
        `chat_emojiPanelStickerPackSelector`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -17.3683329269579 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.05035850270622051)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.07265841935268375 + 0.7387403119221387)),
        })), { alpha: 255 }),
    ],
    [
        `chat_emojiPanelStickerPackSelectorLine`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -5.7965241626127 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9317158976187503)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.0488670130671511 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_emojiPanelStickerSetName`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -10.3415929963135 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.2568192192774413)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.13731961454813174 + 0.18205727154142662)),
        })), { alpha: 255 }),
    ],
    [
        `chat_emojiPanelStickerSetNameHighlight`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -1.8836955425442 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9808472398895293)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9713306659626713 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_emojiPanelStickerSetNameIcon`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -8.2663235894617 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.13115396253588965)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.11908632014801636 + 0.4039531305176541)),
        })), { alpha: 255 }),
    ],
    [
        `chat_emojiPanelTrendingDescription`,
        {
            red: 138,
            green: 138,
            blue: 138,
            alpha: 255,
        },
    ],
    [
        `chat_emojiPanelTrendingTitle`,
        {
            red: 34,
            green: 34,
            blue: 34,
            alpha: 255,
        },
    ],
    [
        `chat_emojiSearchBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -7.8659172456272 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.08717706447221386)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.13457832512732706 + 0.7431889895416649)),
        })), { alpha: 255 }),
    ],
    [
        `chat_emojiSearchIcon`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -8.8538449600875 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.3225345630732239)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.24964946229600954 + 0.22128924358539198)),
        })), { alpha: 255 }),
    ],
    [
        `chat_fieldOverlayText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + 2.6108672924922 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 1.035754621447652)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.1929923373746314 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_gifSaveHintBackground`,
        {
            red: 17,
            green: 17,
            blue: 17,
            alpha: 204,
        },
    ],
    [
        `chat_gifSaveHintText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_goDownButton`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_goDownButtonCounter`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_goDownButtonCounterBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -4.860357545743 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 1.0030684096794276)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_goDownButtonIcon`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -13.0488013806842 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.18228817560690067)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.10788198965024702 + 0.2381529908086019)),
        })), { alpha: 255 }),
    ],
    [
        `chat_goDownButtonShadow`,
        {
            red: 0,
            green: 0,
            blue: 0,
            alpha: 255,
        },
    ],
    [
        `chat_inAudioCacheSeekbar`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -13.0419359125548 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.22108335105850563)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.3478305510954167 + 0.5823999751267975)),
        })), { alpha: 63 }),
    ],
    [
        `chat_inAudioDurationSelectedText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -15.9001008291368 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.4379090346403931)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.3976164691221154 + 0.1725586729764156)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inAudioDurationText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -10.5494451720815 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.21840812999453602)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.17776633929011357 + 0.30310286305149436)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inAudioPerfomerSelectedText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -13.4844557904163 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.29331912400964094)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.02094382706968954 + 0.022146734642857182)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inAudioPerfomerText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -13.4844557904163 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.29331912400964094)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.02094382706968954 + 0.022146734642857182)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inAudioProgress`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_inAudioSeekbar`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -11.0682215465328 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.1143771941242643)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.17994969894617818 + 0.7218703299796445)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inAudioSeekbarFill`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -5.0878738867383 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.936753370476289)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9713306659626713 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inAudioSeekbarSelected`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -26.4824580933212 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.39305454802703194)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.5726789038421305 + 0.3311878752928806)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inAudioSelectedProgress`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -20.4671252340196 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.258592615937695)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.46274851397299666 + 0.6066645711828288)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inAudioTitleText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -6.0621449543802 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.2605584004365969)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.013905080790213362 + 0.018004912183181628)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inBubble`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_inBubbleSelected`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -15.1497428090964 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.22579544525213255)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.4076859035779278 + 0.6613068321218012)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inBubbleShadow`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -2.5301120896882 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8949532524114128)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.10412084556119855 + 0)),
        })), { alpha: 118 }),
    ],
    [
        `chat_inContactBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -3.2011631649495 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 1.0059902463510122)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.119577014499426 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inContactIcon`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_inContactNameText`,
        {
            red: 50,
            green: 50,
            blue: 50,
            alpha: 255,
        },
    ],
    [
        `chat_inContactPhoneSelectedText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -15.9001008291368 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.4379090346403931)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.3976164691221154 + 0.1725586729764156)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inContactPhoneText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -10.5494451720815 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.21840812999453602)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.17776633929011357 + 0.30310286305149436)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inDownCall`,
        {
            red: 0,
            green: 200,
            blue: 83,
            alpha: 255,
        },
    ],
    [
        `chat_inFileBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -11.1628741646641 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.09405178535108058)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.1550583876540763 + 0.7842808141891656)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inFileBackgroundSelected`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -23.302063197829 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.3671582882720904)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.610938888697517 + 0.414032230997214)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inFileIcon`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -10.3926599975345 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.3832171145023185)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.39517226482356715 + 0.24282761571263697)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inFileInfoSelectedText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -15.9001008291368 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.4379090346403931)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.3976164691221154 + 0.1725586729764156)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inFileInfoText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -10.5494451720815 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.21840812999453602)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.17776633929011357 + 0.30310286305149436)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inFileNameText`,
        {
            red: 41,
            green: 41,
            blue: 41,
            alpha: 255,
        },
    ],
    [
        `chat_inFileProgress`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_inFileProgressSelected`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -23.302063197829 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.3671582882720904)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.610938888697517 + 0.414032230997214)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inFileSelectedIcon`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -24.385135508423 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.5904764421308243)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.5952674548982374 + 0.06381011948049692)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inForwardedNameText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + 0.6821506084601 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 1.000654248869236)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9431466082619258 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inGreenCall`,
        {
            red: 47,
            green: 199,
            blue: 102,
            alpha: 255,
        },
    ],
    [
        `chat_inInstant`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -4.3286990081348 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 1.020970475423388)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.0488670130671511 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inInstantSelected`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + 0.6821506084601 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 1.000654248869236)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9431466082619258 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inLoader`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -4.0996048249227 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9697678479549324)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.109310631068142 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inLoaderPhoto`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.316222194637 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.39059281094913134)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.40733079174556047 + 0.23918228876466885)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inLoaderPhotoIcon`,
        {
            red: 252,
            green: 252,
            blue: 252,
            alpha: 255,
        },
    ],
    [
        `chat_inLoaderPhotoIconSelected`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -11.1628741646641 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.09405178535108058)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.1550583876540763 + 0.7842808141891656)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inLoaderPhotoSelected`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -10.3926599975345 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.3832171145023185)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.39517226482356715 + 0.24282761571263697)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inLoaderSelected`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -4.3450602368 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 1.0023411091559644)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.0193836526641076 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inLocationBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -11.1628741646641 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.09405178535108058)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.1550583876540763 + 0.7842808141891656)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inLocationIcon`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -10.3926599975345 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.3832171145023185)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.39517226482356715 + 0.24282761571263697)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inMediaIcon`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_inMediaIconSelected`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -15.1497428090964 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.22579544525213255)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.4076859035779278 + 0.6613068321218012)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inMenu`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -8.8061508362903 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.1691819880284634)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.17055469827874148 + 0.41664868396189947)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inMenuSelected`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -25.9805294984894 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.42577394119559153)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.4693232973392163 + 0.22059591290988945)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inPreviewInstantSelectedText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + 0.6821506084601 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 1.000654248869236)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9431466082619258 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inPreviewInstantText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -2.6903416597035 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 1.031659834307969)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.8792576145469587 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inPreviewLine`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -1.8908762085032 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.989310111192832)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.088943159450325 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inReplyLine`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -1.7819504235357 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.975448170522921)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9808330742318518 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inReplyMediaMessageSelectedText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -15.9001008291368 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.4379090346403931)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.3976164691221154 + 0.1725586729764156)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inReplyMediaMessageText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -10.5494451720815 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.21840812999453602)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.17776633929011357 + 0.30310286305149436)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inReplyMessageText`,
        {
            red: 0,
            green: 0,
            blue: 0,
            alpha: 255,
        },
    ],
    [
        `chat_inReplyNameText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + 0.6821506084601 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 1.000654248869236)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9431466082619258 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inSentClock`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -10.5266297591453 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.2227118094401581)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.22197384889476862 + 0.3676022144184974)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inSentClockSelected`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.7722593156552 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6426972043888739)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.8051858649198037 + 0.024947599511870894)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inSiteNameText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + 0.6821506084601 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 1.000654248869236)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9431466082619258 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inTimeSelectedText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -15.9001008291368 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.4379090346403931)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.3976164691221154 + 0.1725586729764156)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inTimeText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -10.5494451720815 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.21840812999453602)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.17776633929011357 + 0.30310286305149436)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inUpCall`,
        {
            red: 255,
            green: 72,
            blue: 72,
            alpha: 255,
        },
    ],
    [
        `chat_inVenueInfoSelectedText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -15.9001008291368 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.4379090346403931)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.3976164691221154 + 0.1725586729764156)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inVenueInfoText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -10.5494451720815 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.21840812999453602)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.17776633929011357 + 0.30310286305149436)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inViaBotNameText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + 0.6821506084601 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 1.000654248869236)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9431466082619258 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inViews`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -10.5494451720815 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.21840812999453602)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.17776633929011357 + 0.30310286305149436)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inViewsSelected`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -23.3132744065911 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.439247493307852)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.46841102324520834 + 0.2014770728580253)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inVoiceSeekbar`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -8.878133678298 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.15458520756344502)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.19568592552070938 + 0.5385319197015992)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inVoiceSeekbarFill`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -2.6373124201107 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9969475505955403)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.0389847267996608 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inVoiceSeekbarSelected`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -16.9432464845515 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.42351779497241154)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.6170637327563918 + 0.2943142964451156)),
        })), { alpha: 255 }),
    ],
    [
        `chat_inlineResultIcon`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -2.5768171883006 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 1.0038876230701896)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.0990993743518895 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_linkSelectBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -4.9959967672067 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9698321864109376)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9903894897954554 + 0)),
        })), { alpha: 34 }),
    ],
    [
        `chat_lockIcon`,
        {
            red: 115,
            green: 115,
            blue: 115,
            alpha: 255,
        },
    ],
    [
        `chat_mediaBroadcast`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_mediaInfoText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_mediaLoaderPhoto`,
        {
            red: 0,
            green: 0,
            blue: 0,
            alpha: 102,
        },
    ],
    [
        `chat_mediaLoaderPhotoIcon`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_mediaLoaderPhotoIconSelected`,
        {
            red: 217,
            green: 217,
            blue: 217,
            alpha: 255,
        },
    ],
    [
        `chat_mediaLoaderPhotoSelected`,
        {
            red: 0,
            green: 0,
            blue: 0,
            alpha: 127,
        },
    ],
    [
        `chat_mediaMenu`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_mediaProgress`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_mediaSentCheck`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_mediaSentClock`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_mediaTimeBackground`,
        {
            red: 0,
            green: 0,
            blue: 0,
            alpha: 102,
        },
    ],
    [
        `chat_mediaTimeText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_mediaViews`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_messageLinkIn`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + 1.5642411746539 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 1.042724807048631)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9713306659626713 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_messageLinkOut`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -10.4883680496341 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.4201657286249687)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.7586319756613024 + 0.36975140706254706)),
        })), { alpha: 255 }),
    ],
    [
        `chat_messagePanelBackground`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_messagePanelCancelInlineBot`,
        {
            red: 173,
            green: 173,
            blue: 173,
            alpha: 255,
        },
    ],
    [
        `chat_messagePanelCursor`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -7.4986636465457 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9125675804465535)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.8526738868311577 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_messagePanelHint`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -12.7308850159645 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.18407410833542906)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.1498212561853793 + 0.32631879629887195)),
        })), { alpha: 255 }),
    ],
    [
        `chat_messagePanelIcons`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -13.0488013806842 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.18228817560690067)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.10788198965024702 + 0.2381529908086019)),
        })), { alpha: 255 }),
    ],
    [
        `chat_messagePanelPressedSend`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_messagePanelSend`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -0.5226148549264 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9985851649791376)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.1929923373746314 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_messagePanelShadow`,
        {
            red: 0,
            green: 0,
            blue: 0,
            alpha: 229,
        },
    ],
    [
        `chat_messagePanelText`,
        {
            red: 0,
            green: 0,
            blue: 0,
            alpha: 255,
        },
    ],
    [
        `chat_messagePanelVideoFrame`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -5.8291584276893 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9642084813580174)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.119577014499426 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_messagePanelVoiceBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -1.7305451161981 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 1.014172251319779)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9618821774289785 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_messagePanelVoiceDelete`,
        {
            red: 115,
            green: 115,
            blue: 115,
            alpha: 255,
        },
    ],
    [
        `chat_messagePanelVoiceDuration`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_messagePanelVoicePressed`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_messagePanelVoiceShadow`,
        {
            red: 0,
            green: 0,
            blue: 0,
            alpha: 13,
        },
    ],
    [
        `chat_messageTextIn`,
        {
            red: 0,
            green: 0,
            blue: 0,
            alpha: 255,
        },
    ],
    [
        `chat_messageTextOut`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_muteIcon`,
        {
            red: 115,
            green: 115,
            blue: 115,
            alpha: 102,
        },
    ],
    [
        `chat_outAudioCacheSeekbar`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 43,
        },
    ],
    [
        `chat_outAudioDurationSelectedText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 192,
        },
    ],
    [
        `chat_outAudioDurationText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 192,
        },
    ],
    [
        `chat_outAudioPerfomerSelectedText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_outAudioPerfomerText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_outAudioProgress`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + 2.1907502690637 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9004591514739977)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.8792576145469587 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_outAudioSeekbar`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -8.1692678867077 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.640025989610195)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.1556015826458546 + 0.03996101558470755)),
        })), { alpha: 88 }),
    ],
    [
        `chat_outAudioSeekbarFill`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_outAudioSeekbarSelected`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -8.1692678867077 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.640025989610195)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.1556015826458546 + 0.03996101558470755)),
        })), { alpha: 88 }),
    ],
    [
        `chat_outAudioSelectedProgress`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + 2.1907502690637 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9004591514739977)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.8792576145469587 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_outAudioTitleText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_outBroadcast`,
        {
            red: 70,
            green: 170,
            blue: 54,
            alpha: 255,
        },
    ],
    [
        `chat_outBubble`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + 0.0 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 1)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_outBubbleSelected`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -1.9953748167299 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9955432063843773)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9063186302556714 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_outBubbleShadow`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + 1.4918569460748 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 1.0186291549872821)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.20636412745057414 + 0)),
        })), { alpha: 0 }),
    ],
    [
        `chat_outContactBackground`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_outContactIcon`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -1.9953748167299 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9955432063843773)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9063186302556714 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_outContactNameText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_outContactPhoneSelectedText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 192,
        },
    ],
    [
        `chat_outContactPhoneText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 192,
        },
    ],
    [
        `chat_outFileBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -8.6976091523835 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.7527756870690682)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.0990993743518895 + 0)),
        })), { alpha: 80 }),
    ],
    [
        `chat_outFileBackgroundSelected`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -8.6976091523835 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.7527756870690682)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.0990993743518895 + 0)),
        })), { alpha: 80 }),
    ],
    [
        `chat_outFileIcon`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -12.0245872220278 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.3832171145023185)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.39517226482356715 + 0.24282761571263697)),
        })), { alpha: 255 }),
    ],
    [
        `chat_outFileInfoSelectedText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 192,
        },
    ],
    [
        `chat_outFileInfoText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 192,
        },
    ],
    [
        `chat_outFileNameText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_outFileProgress`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -1.9953748167299 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9955432063843773)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9063186302556714 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_outFileProgressSelected`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -1.9953748167299 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9955432063843773)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9063186302556714 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_outFileSelectedIcon`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -24.385135508423 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.5904764421308243)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.5952674548982374 + 0.06381011948049692)),
        })), { alpha: 255 }),
    ],
    [
        `chat_outForwardedNameText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_outGreenCall`,
        {
            red: 47,
            green: 199,
            blue: 102,
            alpha: 255,
        },
    ],
    [
        `chat_outInstant`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_outInstantSelected`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_outLoader`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_outLoaderPhoto`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.316222194637 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.39059281094913134)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.40733079174556047 + 0.23918228876466885)),
        })), { alpha: 255 }),
    ],
    [
        `chat_outLoaderPhotoIcon`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_outLoaderPhotoIconSelected`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -11.1628741646641 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.09405178535108058)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.1550583876540763 + 0.7842808141891656)),
        })), { alpha: 255 }),
    ],
    [
        `chat_outLoaderPhotoSelected`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -12.0245872220278 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.3832171145023185)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.39517226482356715 + 0.24282761571263697)),
        })), { alpha: 255 }),
    ],
    [
        `chat_outLoaderSelected`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_outLocationBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -11.0386052597654 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6792116752568125)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.0990993743518895 + 0)),
        })), { alpha: 80 }),
    ],
    [
        `chat_outLocationIcon`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 228,
        },
    ],
    [
        `chat_outMediaIcon`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -1.9953748167299 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9955432063843773)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9063186302556714 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_outMediaIconSelected`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -1.9953748167299 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9955432063843773)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9063186302556714 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_outMenu`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 144,
        },
    ],
    [
        `chat_outMenuSelected`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 144,
        },
    ],
    [
        `chat_outPreviewInstantSelectedText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_outPreviewInstantText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_outPreviewLine`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_outReplyLine`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_outReplyMediaMessageSelectedText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 192,
        },
    ],
    [
        `chat_outReplyMediaMessageText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 192,
        },
    ],
    [
        `chat_outReplyMessageText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_outReplyNameText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_outSentCheck`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 184,
        },
    ],
    [
        `chat_outSentCheckRead`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 184,
        },
    ],
    [
        `chat_outSentCheckReadSelected`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 184,
        },
    ],
    [
        `chat_outSentCheckSelected`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 184,
        },
    ],
    [
        `chat_outSentClock`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 112,
        },
    ],
    [
        `chat_outSentClockSelected`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 112,
        },
    ],
    [
        `chat_outSiteNameText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_outTimeSelectedText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 182,
        },
    ],
    [
        `chat_outTimeText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 182,
        },
    ],
    [
        `chat_outUpCall`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -18.6805566313311 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.549168333246812)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9915531639980971 + 0.17624750012978196)),
        })), { alpha: 255 }),
    ],
    [
        `chat_outVenueInfoSelectedText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -17.6836406724129 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.5670269924737654)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.0237979403065864 + 0.14945951128935198)),
        })), { alpha: 240 }),
    ],
    [
        `chat_outVenueInfoText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -12.4909292244776 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.595942749560589)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.0760069055601504 + 0.10608587565911642)),
        })), { alpha: 240 }),
    ],
    [
        `chat_outVenueNameText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -7.3697506199249 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9316399007221488)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.7924875897468678 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_outViaBotNameText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_outViews`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 179,
        },
    ],
    [
        `chat_outViewsSelected`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_outVoiceSeekbar`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 112,
        },
    ],
    [
        `chat_outVoiceSeekbarFill`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_outVoiceSeekbarSelected`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 112,
        },
    ],
    [
        `chat_previewDurationText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_previewGameText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_recordTime`,
        {
            red: 77,
            green: 76,
            blue: 75,
            alpha: 255,
        },
    ],
    [
        `chat_recordVoiceCancel`,
        {
            red: 153,
            green: 153,
            blue: 153,
            alpha: 255,
        },
    ],
    [
        `chat_recordedVoiceBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -1.6092511573849 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9826324771755566)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_recordedVoiceDot`,
        {
            red: 243,
            green: 70,
            blue: 70,
            alpha: 255,
        },
    ],
    [
        `chat_recordedVoicePlayPause`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_recordedVoicePlayPausePressed`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -10.1375963903183 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.2928322448323636)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.5100532303119453 + 0.5409493885996958)),
        })), { alpha: 255 }),
    ],
    [
        `chat_recordedVoiceProgress`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -8.1687657014719 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.6416139863048833)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.0874381262984845 + 0.03527489027283475)),
        })), { alpha: 255 }),
    ],
    [
        `chat_recordedVoiceProgressInner`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_replyPanelClose`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -13.0488013806842 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.18228817560690067)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.10788198965024702 + 0.2381529908086019)),
        })), { alpha: 255 }),
    ],
    [
        `chat_replyPanelIcons`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + 0.0135041814687 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9632338775681839)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9903894897954554 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_replyPanelLine`,
        {
            red: 232,
            green: 232,
            blue: 232,
            alpha: 255,
        },
    ],
    [
        `chat_replyPanelMessage`,
        {
            red: 52,
            green: 52,
            blue: 52,
            alpha: 255,
        },
    ],
    [
        `chat_replyPanelName`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + 0.6821506084601 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 1.000654248869236)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9431466082619258 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_reportSpam`,
        {
            red: 245,
            green: 64,
            blue: 76,
            alpha: 255,
        },
    ],
    [
        `chat_searchPanelIcons`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -3.4263074307096 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.1530774627476619)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.0439351293077208 + 0.1224608530998267)),
        })), { alpha: 255 }),
    ],
    [
        `chat_searchPanelText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -3.4263074307096 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.1530774627476619)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.0439351293077208 + 0.1224608530998267)),
        })), { alpha: 255 }),
    ],
    [
        `chat_secretChatStatusText`,
        {
            red: 127,
            green: 127,
            blue: 127,
            alpha: 255,
        },
    ],
    [
        `chat_secretTimeText`,
        {
            red: 228,
            green: 226,
            blue: 224,
            alpha: 255,
        },
    ],
    [
        `chat_secretTimerBackground`,
        {
            red: 0,
            green: 0,
            blue: 0,
            alpha: 82,
        },
    ],
    [
        `chat_secretTimerText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_selectedBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -2.7070906308313 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 1.0363242914027708)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.2037027677054892 + 0)),
        })), { alpha: 45 }),
    ],
    [
        `chat_sentError`,
        {
            red: 255,
            green: 0,
            blue: 0,
            alpha: 255,
        },
    ],
    [
        `chat_sentErrorIcon`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_serviceBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -8.5216350459083 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.7442885686867037)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.37250859891427146 + 0)),
        })), { alpha: 85 }),
    ],
    [
        `chat_serviceBackgroundSelected`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -8.5216350459083 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.7442885686867037)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.37250859891427146 + 0)),
        })), { alpha: 117 }),
    ],
    [
        `chat_serviceIcon`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_serviceLink`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_serviceText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_shareBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -11.542296437475 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.5828162822888184)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.4012717863326198 + 0.04796149894783408)),
        })), { alpha: 102 }),
    ],
    [
        `chat_shareBackgroundSelected`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -11.542296437475 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.5828162822888184)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.4012717863326198 + 0.04796149894783408)),
        })), { alpha: 153 }),
    ],
    [
        `chat_status`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -3.1850087268754 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 1.0414519237739153)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9154454511854958 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chat_stickerNameText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_stickerReplyLine`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_stickerReplyMessageText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_stickerReplyNameText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_stickerViaBotNameText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_stickersHintPanel`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_textSelectBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -5.3652023926159 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9910010312269215)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.0193836526641076 + 0)),
        })), { alpha: 61 }),
    ],
    [
        `chat_topPanelBackground`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_topPanelClose`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -19.3080444373192 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.19656320786356685)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.11468530737266644 + 0.22786611043909724)),
        })), { alpha: 255 }),
    ],
    [
        `chat_topPanelLine`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -0.5435083680723 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9768002526560152)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.1929923373746314 + 0)),
        })), { alpha: 234 }),
    ],
    [
        `chat_topPanelMessage`,
        {
            red: 153,
            green: 153,
            blue: 153,
            alpha: 255,
        },
    ],
    [
        `chat_topPanelTitle`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + 0.6821506084601 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 1.000654248869236)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9431466082619258 + 0)),
        })), { alpha: 239 }),
    ],
    [
        `chat_unreadMessagesStartArrowIcon`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -10.3926599975345 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.3832171145023185)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.39517226482356715 + 0.24282761571263697)),
        })), { alpha: 255 }),
    ],
    [
        `chat_unreadMessagesStartBackground`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chat_unreadMessagesStartText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + 0.6821506084601 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 1.000654248869236)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9431466082619258 + 0)),
        })), { alpha: 221 }),
    ],
    [
        `chat_wallpaper`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -7.094433983107 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.24392300128204394)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.394731531698522 + 0.5683382874260146)),
        })), { alpha: 255 }),
    ],
    [
        `chats_actionBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -2.540921295372 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9514746340372864)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.0990993743518895 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chats_actionIcon`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chats_actionMessage`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -1.8660828914381 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9867110850398916)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.7924875897468678 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chats_actionPressedBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + 0.5490553242268 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9946651318299606)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.8265650111210955 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chats_actionUnreadBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -4.9016483138398 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9814522016039982)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.109310631068142 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chats_actionUnreadIcon`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chats_actionUnreadPressedBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + 1.704969943544 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 1.0118894922801815)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9713306659626713 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chats_archiveBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -3.4213635909913 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9424441738742055)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.0788419012662136 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chats_archiveIcon`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chats_archivePinBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -1.6725717459653 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.2123603671206516)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.2392439739617685 + 0.42520370490777903)),
        })), { alpha: 255 }),
    ],
    [
        `chats_archivePullDownBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -11.2832184351104 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.06757295398930163)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.07367093727151675 + 0.5426237433764065)),
        })), { alpha: 255 }),
    ],
    [
        `chats_archivePullDownBackgroundActive`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -7.4248328241054 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8571815007402277)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.8972451100830868 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chats_archiveText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chats_attachMessage`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -1.8660828914381 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9867110850398916)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.7924875897468678 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chats_date`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -15.429396565637 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.10011538425312012)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.060095185629604836 + 0.28252626638592254)),
        })), { alpha: 255 }),
    ],
    [
        `chats_draft`,
        {
            red: 227,
            green: 34,
            blue: 70,
            alpha: 250,
        },
    ],
    [
        `chats_mentionIcon`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chats_menuBackground`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chats_menuCloud`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chats_menuCloudBackgroundCats`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -5.5849203296359 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9583300909632978)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.7592441107698455 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chats_menuItemCheck`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -8.3880700091263 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8308938384474492)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.5910431559629412 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chats_menuItemIcon`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.2791114243148 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.22519977183126114)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.12767107099078698 + 0.20792343346101325)),
        })), { alpha: 255 }),
    ],
    [
        `chats_menuItemText`,
        {
            red: 68,
            green: 68,
            blue: 68,
            alpha: 255,
        },
    ],
    [
        `chats_menuName`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chats_menuPhone`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 195,
        },
    ],
    [
        `chats_menuPhoneCats`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chats_menuTopBackgroundCats`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -4.4917909315577 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8985084400124838)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.7510628503978902 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chats_menuTopShadow`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -2.0490183180454 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 1.0043828449656709)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.27774243502925794 + 0)),
        })), { alpha: 41 }),
    ],
    [
        `chats_menuTopShadowCats`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -1.0708644228513 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 1.0168443194771535)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.2037027677054892 + 0)),
        })), { alpha: 0 }),
    ],
    [
        `chats_message`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -11.3052822248073 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.06263951444504337)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.031065739028713894 + 0.24886883187558642)),
        })), { alpha: 255 }),
    ],
    [
        `chats_messageArchived`,
        {
            red: 145,
            green: 145,
            blue: 145,
            alpha: 255,
        },
    ],
    [
        `chats_message_threeLines`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -21.39837823204 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.046605972788118816)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.023826855415190702 + 0.26335410669278664)),
        })), { alpha: 255 }),
    ],
    [
        `chats_muteIcon`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -15.5131882230032 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.08150144606041658)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.08123138920202204 + 0.48452681031440226)),
        })), { alpha: 255 }),
    ],
    [
        `chats_name`,
        {
            red: 34,
            green: 34,
            blue: 34,
            alpha: 255,
        },
    ],
    [
        `chats_nameArchived`,
        {
            red: 82,
            green: 82,
            blue: 82,
            alpha: 255,
        },
    ],
    [
        `chats_nameIcon`,
        {
            red: 36,
            green: 36,
            blue: 36,
            alpha: 255,
        },
    ],
    [
        `chats_nameMessage`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -1.8660828914381 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9867110850398916)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.7924875897468678 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chats_nameMessageArchived`,
        {
            red: 145,
            green: 145,
            blue: 145,
            alpha: 255,
        },
    ],
    [
        `chats_nameMessageArchived_threeLines`,
        {
            red: 145,
            green: 145,
            blue: 145,
            alpha: 255,
        },
    ],
    [
        `chats_nameMessage_threeLines`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + 1.9974219495085 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.19015640126769764)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.022875195185402993 + 0.04762191555839948)),
        })), { alpha: 255 }),
    ],
    [
        `chats_onlineCircle`,
        {
            red: 75,
            green: 203,
            blue: 28,
            alpha: 255,
        },
    ],
    [
        `chats_pinnedIcon`,
        {
            red: 168,
            green: 168,
            blue: 168,
            alpha: 255,
        },
    ],
    [
        `chats_pinnedOverlay`,
        {
            red: 0,
            green: 0,
            blue: 0,
            alpha: 6,
        },
    ],
    [
        `chats_secretIcon`,
        {
            red: 25,
            green: 177,
            blue: 38,
            alpha: 255,
        },
    ],
    [
        `chats_secretName`,
        {
            red: 0,
            green: 166,
            blue: 14,
            alpha: 255,
        },
    ],
    [
        `chats_sentCheck`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -4.8066014743349 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 1.0179179240141953)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.2037027677054892 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chats_sentClock`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + 1.1377330295095 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 1.0143624170997598)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.1929923373746314 + 0)),
        })), { alpha: 123 }),
    ],
    [
        `chats_sentError`,
        {
            red: 255,
            green: 0,
            blue: 0,
            alpha: 255,
        },
    ],
    [
        `chats_sentErrorIcon`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chats_sentReadCheck`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -4.8066014743349 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 1.0179179240141953)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.2037027677054892 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chats_tabletSelectedOverlay`,
        {
            red: 0,
            green: 0,
            blue: 0,
            alpha: 15,
        },
    ],
    [
        `chats_unreadCounter`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -1.0649843819122 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 1.0385363765204285)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.2037027677054892 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chats_unreadCounterMuted`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -11.2832184351104 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.06757295398930163)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.07367093727151675 + 0.5426237433764065)),
        })), { alpha: 255 }),
    ],
    [
        `chats_unreadCounterText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `chats_verifiedBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -5.3577815057231 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9976500370476267)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.129898609350403 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `chats_verifiedCheck`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `checkbox`,
        {
            red: 94,
            green: 194,
            blue: 69,
            alpha: 255,
        },
    ],
    [
        `checkboxCheck`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `checkboxDisabled`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -10.6267917826471 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.20365409113790411)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.1983711881481163 + 0.37467868147865474)),
        })), { alpha: 255 }),
    ],
    [
        `checkboxSquareBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -7.5731454607057 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9637733982507707)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.888224801358425 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `checkboxSquareCheck`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `checkboxSquareDisabled`,
        {
            red: 176,
            green: 176,
            blue: 176,
            alpha: 255,
        },
    ],
    [
        `checkboxSquareUnchecked`,
        {
            red: 115,
            green: 115,
            blue: 115,
            alpha: 255,
        },
    ],
    [
        `contacts_inviteBackground`,
        {
            red: 85,
            green: 190,
            blue: 97,
            alpha: 255,
        },
    ],
    [
        `contacts_inviteText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `contextProgressInner1`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -14.0658062303672 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.45341433875507414)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.7544660193896033 + 0.2947942143183297)),
        })), { alpha: 255 }),
    ],
    [
        `contextProgressInner2`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -9.8843845211609 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.4254242828054613)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.7078915194459569 + 0.33348690589735397)),
        })), { alpha: 206 }),
    ],
    [
        `contextProgressInner3`,
        {
            red: 179,
            green: 179,
            blue: 179,
            alpha: 255,
        },
    ],
    [
        `contextProgressInner4`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -11.2885688772735 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.0663788683861164)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.07559664735258834 + 0.56795371894046)),
        })), { alpha: 255 }),
    ],
    [
        `contextProgressOuter1`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -2.0104324785613 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 1.020784537589042)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.1929923373746314 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `contextProgressOuter2`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -0.8297353125942 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9810399710456312)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.2037027677054892 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `contextProgressOuter3`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `contextProgressOuter4`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -2.0104324785613 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 1.020784537589042)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.1929923373746314 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `dialogBackground`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `dialogBackgroundGray`,
        {
            red: 240,
            green: 240,
            blue: 240,
            alpha: 255,
        },
    ],
    [
        `dialogBadgeBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -5.1729820052859 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 1.0123884250247934)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.029156968766875 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `dialogBadgeText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `dialogButton`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -0.3888484419064 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 1.0143240056410194)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.009664691980958 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `dialogButtonSelector`,
        {
            red: 0,
            green: 0,
            blue: 0,
            alpha: 15,
        },
    ],
    [
        `dialogCameraIcon`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `dialogCheckboxSquareBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -0.4172652172236 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 1.0217970332919342)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.0389847267996608 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `dialogCheckboxSquareCheck`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `dialogCheckboxSquareDisabled`,
        {
            red: 176,
            green: 176,
            blue: 176,
            alpha: 255,
        },
    ],
    [
        `dialogCheckboxSquareUnchecked`,
        {
            red: 115,
            green: 115,
            blue: 115,
            alpha: 255,
        },
    ],
    [
        `dialogFloatingButton`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -4.0432226666563 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9711349856636307)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.0990993743518895 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `dialogFloatingButtonPressed`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -6.9111150109746 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 1.0106434672205473)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.0990993743518895 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `dialogFloatingIcon`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `dialogGrayLine`,
        {
            red: 210,
            green: 210,
            blue: 210,
            alpha: 255,
        },
    ],
    [
        `dialogIcon`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -7.4753911724027 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.16993318987799508)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.04971443252707629 + 0.12072812265466994)),
        })), { alpha: 255 }),
    ],
    [
        `dialogInputField`,
        {
            red: 219,
            green: 219,
            blue: 219,
            alpha: 255,
        },
    ],
    [
        `dialogInputFieldActivated`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -7.3971486384472 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9973825545966207)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.0488670130671511 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `dialogLineProgress`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -5.8223489317256 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 1.0222362352742558)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9618821774289785 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `dialogLineProgressBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -13.1399425390476 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.37601671193084946)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.5860134310763706 + 0.37631490753049335)),
        })), { alpha: 255 }),
    ],
    [
        `dialogLinkSelection`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -7.0818851781563 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8772578152826157)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9246256619579709 + 0)),
        })), { alpha: 51 }),
    ],
    [
        `dialogProgressCircle`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -1.9608331346106 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9712312476957402)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.009664691980958 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `dialogRadioBackground`,
        {
            red: 179,
            green: 179,
            blue: 179,
            alpha: 255,
        },
    ],
    [
        `dialogRadioBackgroundChecked`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -4.3286990081348 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 1.020970475423388)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.0488670130671511 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `dialogRedIcon`,
        {
            red: 225,
            green: 77,
            blue: 77,
            alpha: 255,
        },
    ],
    [
        `dialogRoundCheckBox`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -6.9111150109746 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 1.0106434672205473)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.0990993743518895 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `dialogRoundCheckBoxCheck`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `dialogScrollGlow`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -11.495439828989 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.019079150127036464)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.032040866907620744 + 0.9034922713228265)),
        })), { alpha: 255 }),
    ],
    [
        `dialogSearchBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -21.4674461303972 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.028760344253866785)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.04741571456335492 + 0.8737071044484387)),
        })), { alpha: 255 }),
    ],
    [
        `dialogSearchHint`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -12.6724292843189 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.1955445219892977)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.13643518083344064 + 0.2730831954183239)),
        })), { alpha: 255 }),
    ],
    [
        `dialogSearchIcon`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -10.7687551329475 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.17590151432162765)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.13615197716803637 + 0.3155795353193915)),
        })), { alpha: 255 }),
    ],
    [
        `dialogSearchText`,
        {
            red: 51,
            green: 51,
            blue: 51,
            alpha: 255,
        },
    ],
    [
        `dialogShadowLine`,
        {
            red: 0,
            green: 0,
            blue: 0,
            alpha: 18,
        },
    ],
    [
        `dialogTextBlack`,
        {
            red: 34,
            green: 34,
            blue: 34,
            alpha: 255,
        },
    ],
    [
        `dialogTextBlue`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -4.588598450784 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 1.0218620182767817)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.8094216891545851 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `dialogTextBlue2`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -6.3875696771779 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 1.0239990299475132)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.8526738868311577 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `dialogTextBlue3`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -1.0005857103 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 1.0275405136518936)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9903894897954554 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `dialogTextBlue4`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -2.3569661857886 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 1.0358712838555502)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9713306659626713 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `dialogTextGray`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -6.8595703098255 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9971022787189802)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.8703434598870238 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `dialogTextGray2`,
        {
            red: 117,
            green: 117,
            blue: 117,
            alpha: 255,
        },
    ],
    [
        `dialogTextGray3`,
        {
            red: 153,
            green: 153,
            blue: 153,
            alpha: 255,
        },
    ],
    [
        `dialogTextGray4`,
        {
            red: 179,
            green: 179,
            blue: 179,
            alpha: 255,
        },
    ],
    [
        `dialogTextHint`,
        {
            red: 151,
            green: 151,
            blue: 151,
            alpha: 255,
        },
    ],
    [
        `dialogTextLink`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + 1.3118905452134 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 1.0198882328500973)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `dialogTextRed`,
        {
            red: 230,
            green: 85,
            blue: 94,
            alpha: 255,
        },
    ],
    [
        `dialogTextRed2`,
        {
            red: 235,
            green: 85,
            blue: 93,
            alpha: 255,
        },
    ],
    [
        `dialogTopBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -9.0738880164042 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8314939639849191)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9431466082619258 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `dialog_inlineProgress`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -17.484614159318 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.22655857286774578)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.07683067354204581 + 0.12399216310963874)),
        })), { alpha: 255 }),
    ],
    [
        `dialog_inlineProgressBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -5.3797822695664 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.04767379503783988)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.07859735744860503 + 0.8478023348310282)),
        })), { alpha: 246 }),
    ],
    [
        `dialog_liveLocationProgress`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -6.5330859632718 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9957214388746607)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9431466082619258 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `divider`,
        {
            red: 230,
            green: 230,
            blue: 230,
            alpha: 255,
        },
    ],
    [
        `emptyListPlaceholder`,
        {
            red: 149,
            green: 149,
            blue: 149,
            alpha: 255,
        },
    ],
    [
        `fastScrollActive`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -5.3178019933836 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9766495594327744)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.029156968766875 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `fastScrollInactive`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -11.1926977923851 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.08755692269986659)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.10079690255508898 + 0.5538578436790744)),
        })), { alpha: 255 }),
    ],
    [
        `fastScrollText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `featuredStickers_addButton`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -6.4661592440296 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9423929165460235)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `featuredStickers_addButtonPressed`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -5.7467439134619 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9629642038033258)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.8792576145469587 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `featuredStickers_addedIcon`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -4.418893170957 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 1.0072967231611636)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.2037027677054892 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `featuredStickers_buttonProgress`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `featuredStickers_buttonText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `featuredStickers_delButton`,
        {
            red: 217,
            green: 87,
            blue: 87,
            alpha: 255,
        },
    ],
    [
        `featuredStickers_delButtonPressed`,
        {
            red: 198,
            green: 73,
            blue: 73,
            alpha: 255,
        },
    ],
    [
        `featuredStickers_unread`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -6.1920590912921 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9490301604877432)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9903894897954554 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `files_folderIcon`,
        {
            red: 153,
            green: 153,
            blue: 153,
            alpha: 255,
        },
    ],
    [
        `files_folderIconBackground`,
        {
            red: 240,
            green: 240,
            blue: 240,
            alpha: 255,
        },
    ],
    [
        `files_iconText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `graySection`,
        {
            red: 248,
            green: 248,
            blue: 248,
            alpha: 255,
        },
    ],
    [
        `groupcreate_checkbox`,
        {
            red: 81,
            green: 208,
            blue: 76,
            alpha: 255,
        },
    ],
    [
        `groupcreate_cursor`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -4.7529003759059 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 1.003829939612209)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.0193836526641076 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `groupcreate_hintText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -10.5494451720815 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.21840812999453602)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.17776633929011357 + 0.30310286305149436)),
        })), { alpha: 255 }),
    ],
    [
        `groupcreate_sectionShadow`,
        {
            red: 0,
            green: 0,
            blue: 0,
            alpha: 255,
        },
    ],
    [
        `groupcreate_sectionText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -10.7015251081756 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.18915430926141288)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.08408473247754047 + 0.1763462638688394)),
        })), { alpha: 255 }),
    ],
    [
        `groupcreate_spanBackground`,
        {
            red: 242,
            green: 242,
            blue: 242,
            alpha: 255,
        },
    ],
    [
        `groupcreate_spanDelete`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `groupcreate_spanText`,
        {
            red: 34,
            green: 34,
            blue: 34,
            alpha: 255,
        },
    ],
    [
        `inappPlayerBackground`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `inappPlayerClose`,
        {
            red: 168,
            green: 168,
            blue: 168,
            alpha: 255,
        },
    ],
    [
        `inappPlayerPerformer`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -13.4844557904163 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.29331912400964094)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.02094382706968954 + 0.022146734642857182)),
        })), { alpha: 255 }),
    ],
    [
        `inappPlayerPlayPause`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -3.1854639491536 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 1.0282854447000844)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.0990993743518895 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `inappPlayerTitle`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -13.4844557904163 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.29331912400964094)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.02094382706968954 + 0.022146734642857182)),
        })), { alpha: 255 }),
    ],
    [
        `key_changephoneinfo_changeText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -5.1683759049663 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9946821556354494)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9903894897954554 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `key_chat_messagePanelVoiceLock`,
        {
            red: 164,
            green: 164,
            blue: 164,
            alpha: 255,
        },
    ],
    [
        `key_chat_messagePanelVoiceLockBackground`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `key_chat_messagePanelVoiceLockShadow`,
        {
            red: 0,
            green: 0,
            blue: 0,
            alpha: 255,
        },
    ],
    [
        `key_graySectionText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -6.7467725609641 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.2316853137501139)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.12205360913270068 + 0.19037218799846026)),
        })), { alpha: 255 }),
    ],
    [
        `key_player_progressCachedBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -11.0782583850288 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.11224245103363939)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.18504841156019347 + 0.7593660057242118)),
        })), { alpha: 255 }),
    ],
    [
        `key_sheet_other`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -5.1183760191683 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.10781327998057805)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.1268043901171448 + 0.5460603698677186)),
        })), { alpha: 255 }),
    ],
    [
        `key_sheet_scrollUp`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -6.9936989014747 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.06981677070408293)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.10172275557503999 + 0.7224440565549973)),
        })), { alpha: 255 }),
    ],
    [
        `listSelector`,
        {
            red: 51,
            green: 51,
            blue: 51,
            alpha: 78,
        },
    ],
    [
        `listSelectorSDK21`,
        {
            red: 0,
            green: 0,
            blue: 0,
            alpha: 15,
        },
    ],
    [
        `location_liveLocationProgress`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -6.5330859632718 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9957214388746607)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9431466082619258 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `location_placeLocationBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -7.102760399455 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9514918451359567)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9903894897954554 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `location_sendLiveLocationBackground`,
        {
            red: 255,
            green: 100,
            blue: 100,
            alpha: 255,
        },
    ],
    [
        `location_sendLiveLocationIcon`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `location_sendLocationBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -2.540921295372 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9514746340372864)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.0990993743518895 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `location_sendLocationIcon`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `login_progressInner`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -12.6221656092307 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.1585732954432093)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.25422364033477957 + 0.6767217755278374)),
        })), { alpha: 255 }),
    ],
    [
        `login_progressOuter`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -8.6370204435855 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8411296765707531)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.7592441107698455 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `musicPicker_buttonBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -2.3029893305677 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9804826552598472)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.1929923373746314 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `musicPicker_buttonIcon`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `musicPicker_checkbox`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -7.6868499319027 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9857776521556089)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.1929923373746314 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `musicPicker_checkboxCheck`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `passport_authorizeBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -7.5375561158955 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9711984079080528)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.0389847267996608 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `passport_authorizeBackgroundSelected`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -7.681032049605 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9676204392087583)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.8526738868311577 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `passport_authorizeText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `picker_badge`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -3.7549213162718 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 1.0031903732325902)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.119577014499426 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `picker_badgeText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `picker_disabledButton`,
        {
            red: 153,
            green: 153,
            blue: 153,
            alpha: 255,
        },
    ],
    [
        `picker_enabledButton`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -3.1905981673269 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 1.0199396602950896)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.0990993743518895 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `player_actionBar`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `player_actionBarItems`,
        {
            red: 138,
            green: 138,
            blue: 138,
            alpha: 255,
        },
    ],
    [
        `player_actionBarSelector`,
        {
            red: 0,
            green: 0,
            blue: 0,
            alpha: 15,
        },
    ],
    [
        `player_actionBarSubtitle`,
        {
            red: 138,
            green: 138,
            blue: 138,
            alpha: 255,
        },
    ],
    [
        `player_actionBarTitle`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -13.4844557904163 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.29331912400964094)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.02094382706968954 + 0.022146734642857182)),
        })), { alpha: 255 }),
    ],
    [
        `player_actionBarTop`,
        {
            red: 0,
            green: 0,
            blue: 0,
            alpha: 153,
        },
    ],
    [
        `player_background`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `player_button`,
        {
            red: 51,
            green: 51,
            blue: 51,
            alpha: 255,
        },
    ],
    [
        `player_buttonActive`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -2.7622673519362 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 1.0166084474822503)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.1929923373746314 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `player_placeholder`,
        {
            red: 168,
            green: 168,
            blue: 168,
            alpha: 255,
        },
    ],
    [
        `player_placeholderBackground`,
        {
            red: 240,
            green: 240,
            blue: 240,
            alpha: 255,
        },
    ],
    [
        `player_progress`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -3.0960890645138 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 1.0254277038328379)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.1929923373746314 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `player_progressBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -11.0782583850288 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.11224245103363939)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.18504841156019347 + 0.7593660057242118)),
        })), { alpha: 255 }),
    ],
    [
        `player_time`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -4.4584096049093 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.24435406551355043)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.19154619532305234 + 0.2750228270895629)),
        })), { alpha: 255 }),
    ],
    [
        `profile_actionBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -4.9016483138398 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9814522016039982)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.109310631068142 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `profile_actionIcon`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `profile_actionPressedBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + 1.704969943544 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 1.0118894922801815)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9713306659626713 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `profile_creatorIcon`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + 2.5485425327516 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 1.0372175910318608)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.1929923373746314 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `profile_status`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -4.5626925208216 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 1.0298935521024302)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9808330742318518 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `profile_title`,
        {
            red: 54,
            green: 54,
            blue: 54,
            alpha: 255,
        },
    ],
    [
        `profile_verifiedBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -9.2052691614242 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.5483860811501154)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.929431005717949 + 0.16654244636704416)),
        })), { alpha: 255 }),
    ],
    [
        `profile_verifiedCheck`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -4.8873963625549 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8981229364090723)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.5769590310155671 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `progressCircle`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -2.3892736374331 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9908018967160177)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.1929923373746314 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `radioBackground`,
        {
            red: 179,
            green: 179,
            blue: 179,
            alpha: 255,
        },
    ],
    [
        `radioBackgroundChecked`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -2.6929848510075 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 1.028050543904198)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.2037027677054892 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `returnToCallBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -2.4992318493379 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 1.0132488423805068)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.0588039136696192 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `returnToCallText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `sessions_devicesImage`,
        {
            red: 150,
            green: 150,
            blue: 150,
            alpha: 255,
        },
    ],
    [
        `sharedMedia_actionMode`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `sharedMedia_linkPlaceholder`,
        {
            red: 244,
            green: 244,
            blue: 244,
            alpha: 255,
        },
    ],
    [
        `sharedMedia_linkPlaceholderText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -15.9724909645036 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.1379922040380259)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.13596855758835455 + 0.4327658795372818)),
        })), { alpha: 255 }),
    ],
    [
        `sharedMedia_photoPlaceholder`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -17.182301710612 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.09335080499588237)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.1567701233376121 + 0.7998709623282884)),
        })), { alpha: 255 }),
    ],
    [
        `sharedMedia_startStopLoadIcon`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -5.3690927755092 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9981109059022811)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.029156968766875 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `stickers_menu`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -8.8061508362903 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.1691819880284634)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.17055469827874148 + 0.41664868396189947)),
        })), { alpha: 255 }),
    ],
    [
        `stickers_menuSelector`,
        {
            red: 0,
            green: 0,
            blue: 0,
            alpha: 15,
        },
    ],
    [
        `switch2Track`,
        {
            red: 245,
            green: 116,
            blue: 128,
            alpha: 255,
        },
    ],
    [
        `switch2TrackChecked`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -5.5408461210577 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.944308195296581)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.0193836526641076 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `switchThumbChecked`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + 2.6570636951033 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 1.034672898503241)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.1929923373746314 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `switchTrack`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -11.0378487509317 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.12080783683945699)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.1071039677259731 + 0.40204209977805233)),
        })), { alpha: 255 }),
    ],
    [
        `switchTrackBlue`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -11.3309756905338 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.3121321732600653)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.17952389871283214 + 0.16940373091332672)),
        })), { alpha: 255 }),
    ],
    [
        `switchTrackBlueChecked`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -4.7583201364215 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 1.043117165089145)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.7188534455321298 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `switchTrackBlueSelector`,
        {
            red: 51,
            green: 51,
            blue: 51,
            alpha: 78,
        },
    ],
    [
        `switchTrackBlueSelectorChecked`,
        {
            red: 51,
            green: 51,
            blue: 51,
            alpha: 78,
        },
    ],
    [
        `switchTrackBlueThumb`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `switchTrackBlueThumbChecked`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `switchTrackChecked`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -3.5497095317728 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9928683083644197)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.2037027677054892 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `undo_background`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -6.9296593175779 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.5079625990149595)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.03626998705781517 + 0.009414222598093408)),
        })), { alpha: 234 }),
    ],
    [
        `undo_cancelColor`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -9.4867266979807 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.7984534267553488)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.2037027677054892 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `undo_infoColor`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `wallet_addressConfirmBackground`,
        {
            red: 0,
            green: 0,
            blue: 0,
            alpha: 13,
        },
    ],
    [
        `wallet_blackBackground`,
        {
            red: 0,
            green: 0,
            blue: 0,
            alpha: 255,
        },
    ],
    [
        `wallet_blackBackgroundSelector`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 64,
        },
    ],
    [
        `wallet_blackText`,
        {
            red: 34,
            green: 34,
            blue: 34,
            alpha: 255,
        },
    ],
    [
        `wallet_buttonBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -5.747146524536 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9600551126857731)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9524875208580401 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `wallet_buttonPressedBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -3.6121420595726 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 1.0056430071410474)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.8094216891545851 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `wallet_buttonText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `wallet_commentText`,
        {
            red: 153,
            green: 153,
            blue: 153,
            alpha: 255,
        },
    ],
    [
        `wallet_dateText`,
        {
            red: 153,
            green: 153,
            blue: 153,
            alpha: 255,
        },
    ],
    [
        `wallet_grayBackground`,
        {
            red: 41,
            green: 41,
            blue: 41,
            alpha: 255,
        },
    ],
    [
        `wallet_graySettingsBackground`,
        {
            red: 240,
            green: 240,
            blue: 240,
            alpha: 255,
        },
    ],
    [
        `wallet_grayText`,
        {
            red: 119,
            green: 119,
            blue: 119,
            alpha: 255,
        },
    ],
    [
        `wallet_grayText2`,
        {
            red: 102,
            green: 102,
            blue: 102,
            alpha: 255,
        },
    ],
    [
        `wallet_greenText`,
        {
            red: 55,
            green: 168,
            blue: 24,
            alpha: 255,
        },
    ],
    [
        `wallet_pullBackground`,
        {
            red: 33,
            green: 33,
            blue: 33,
            alpha: 255,
        },
    ],
    [
        `wallet_redText`,
        {
            red: 219,
            green: 64,
            blue: 64,
            alpha: 255,
        },
    ],
    [
        `wallet_releaseBackground`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -3.6568420448606 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9810741096788282)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.5981596215189479 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `wallet_statusText`,
        {
            red: 128,
            green: 128,
            blue: 128,
            alpha: 255,
        },
    ],
    [
        `wallet_whiteBackground`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `wallet_whiteText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `windowBackgroundCheckText`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `windowBackgroundChecked`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -6.2960476793437 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8998387382242071)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.8352153594998508 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `windowBackgroundGray`,
        {
            red: 240,
            green: 240,
            blue: 240,
            alpha: 255,
        },
    ],
    [
        `windowBackgroundGrayShadow`,
        {
            red: 0,
            green: 0,
            blue: 0,
            alpha: 255,
        },
    ],
    [
        `windowBackgroundUnchecked`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -10.4165415582503 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.24317308314024402)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.19303683271960237 + 0.27928798810948513)),
        })), { alpha: 255 }),
    ],
    [
        `windowBackgroundWhite`,
        {
            red: 255,
            green: 255,
            blue: 255,
            alpha: 255,
        },
    ],
    [
        `windowBackgroundWhiteBlackText`,
        {
            red: 51,
            green: 51,
            blue: 51,
            alpha: 255,
        },
    ],
    [
        `windowBackgroundWhiteBlueButton`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -0.9538427797624 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 1.0253412389388912)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.129898609350403 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `windowBackgroundWhiteBlueHeader`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -1.6330195154217 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 1.0104112132505405)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.0488670130671511 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `windowBackgroundWhiteBlueIcon`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -0.4436562504041 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9750573144638066)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.129898609350403 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `windowBackgroundWhiteBlueText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + 2.3563687028247 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 1.0247378221342716)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.0389847267996608 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `windowBackgroundWhiteBlueText2`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -6.4430646252837 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9767862344993364)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.8009285325384488 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `windowBackgroundWhiteBlueText3`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -1.5740383409697 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9974209250340004)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.8439182877632745 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `windowBackgroundWhiteBlueText4`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -1.8836955425442 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9808472398895293)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9713306659626713 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `windowBackgroundWhiteBlueText5`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -2.3670516660705 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.992941363684068)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.0588039136696192 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `windowBackgroundWhiteBlueText6`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -4.2640339314963 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9723822926732608)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.7510628503978902 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `windowBackgroundWhiteBlueText7`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -5.5101978259863 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9582676121758692)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9063186302556714 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `windowBackgroundWhiteGrayIcon`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -10.8669532409592 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.15618162877013092)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.0728061156593037 + 0.19769772518687484)),
        })), { alpha: 255 }),
    ],
    [
        `windowBackgroundWhiteGrayLine`,
        {
            red: 219,
            green: 219,
            blue: 219,
            alpha: 255,
        },
    ],
    [
        `windowBackgroundWhiteGrayText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -7.3025241670653 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.2663308521582673)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.1667212353695081 + 0.20819707619138514)),
        })), { alpha: 255 }),
    ],
    [
        `windowBackgroundWhiteGrayText2`,
        {
            red: 138,
            green: 138,
            blue: 138,
            alpha: 255,
        },
    ],
    [
        `windowBackgroundWhiteGrayText3`,
        {
            red: 153,
            green: 153,
            blue: 153,
            alpha: 255,
        },
    ],
    [
        `windowBackgroundWhiteGrayText4`,
        {
            red: 128,
            green: 128,
            blue: 128,
            alpha: 255,
        },
    ],
    [
        `windowBackgroundWhiteGrayText5`,
        {
            red: 163,
            green: 163,
            blue: 163,
            alpha: 255,
        },
    ],
    [
        `windowBackgroundWhiteGrayText6`,
        {
            red: 117,
            green: 117,
            blue: 117,
            alpha: 255,
        },
    ],
    [
        `windowBackgroundWhiteGrayText7`,
        {
            red: 198,
            green: 198,
            blue: 198,
            alpha: 255,
        },
    ],
    [
        `windowBackgroundWhiteGrayText8`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + 18.4237988411394 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.09511417727086988)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.02889754312176357 + 0.14426219185133296)),
        })), { alpha: 255 }),
    ],
    [
        `windowBackgroundWhiteGreenText`,
        {
            red: 38,
            green: 151,
            blue: 44,
            alpha: 255,
        },
    ],
    [
        `windowBackgroundWhiteGreenText2`,
        {
            red: 4,
            green: 172,
            blue: 53,
            alpha: 255,
        },
    ],
    [
        `windowBackgroundWhiteHintText`,
        {
            red: 168,
            green: 168,
            blue: 168,
            alpha: 255,
        },
    ],
    [
        `windowBackgroundWhiteInputField`,
        {
            red: 219,
            green: 219,
            blue: 219,
            alpha: 255,
        },
    ],
    [
        `windowBackgroundWhiteInputFieldActivated`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -7.3971486384472 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9973825545966207)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.0488670130671511 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `windowBackgroundWhiteLinkSelection`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -7.0818851781563 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.8772578152826157)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9246256619579709 + 0)),
        })), { alpha: 33 }),
    ],
    [
        `windowBackgroundWhiteLinkText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + 0.6821506084601 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 1.000654248869236)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 0.9431466082619258 + 0)),
        })), { alpha: 255 }),
    ],
    [
        `windowBackgroundWhiteRedText`,
        {
            red: 205,
            green: 90,
            blue: 90,
            alpha: 255,
        },
    ],
    [
        `windowBackgroundWhiteRedText2`,
        {
            red: 228,
            green: 69,
            blue: 82,
            alpha: 255,
        },
    ],
    [
        `windowBackgroundWhiteRedText3`,
        {
            red: 210,
            green: 73,
            blue: 73,
            alpha: 255,
        },
    ],
    [
        `windowBackgroundWhiteRedText4`,
        {
            red: 207,
            green: 48,
            blue: 48,
            alpha: 255,
        },
    ],
    [
        `windowBackgroundWhiteRedText5`,
        {
            red: 237,
            green: 57,
            blue: 57,
            alpha: 255,
        },
    ],
    [
        `windowBackgroundWhiteRedText6`,
        {
            red: 255,
            green: 102,
            blue: 102,
            alpha: 255,
        },
    ],
    [
        `windowBackgroundWhiteValueText`,
        Object.assign(Object.assign({}, color_1.hsbToRgb({
            hue: (accent.hue + -1.3125232662803 + 360) % 360,
            saturation: Math.max(0, Math.min(1, accent.saturation * 0.9960984906173282)),
            brightness: Math.max(0, Math.min(1, accent.brightness * 1.129898609350403 + 0)),
        })), { alpha: 255 }),
    ],
]);
exports.default = arctic;
//# sourceMappingURL=arctic.js.map